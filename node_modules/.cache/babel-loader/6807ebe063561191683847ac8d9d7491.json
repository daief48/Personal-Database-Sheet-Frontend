{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.editItem && _ctx.editItem(...args))\n  }, \"Edit\");\n}","map":{"version":3,"mappings":";;uBACEA,oBAAuC,QAAvC,EAAuC;IAA9BC,OAAK,yCAAEC,uCAAF;EAAyB,CAAvC,EAA0B,MAA1B","names":["_createElementBlock","onClick","_ctx"],"sourceRoot":"","sources":["C:\\Users\\Jubair\\Desktop\\pds\\src\\components\\ActionButton.vue"],"sourcesContent":["<template>\r\n  <button @click=\"editItem\">Edit</button>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n  methods: {\r\n    editItem() {\r\n      // You can add your edit logic here\r\n      // For example, you can emit an event to inform the parent component\r\n      this.$emit('edit', this.row); // Emit an 'edit' event with the current row data\r\n    },\r\n  },\r\n  props: {\r\n    row: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n});\r\n</script>"]},"metadata":{},"sourceType":"module"}