{"ast":null,"code":"import { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\nimport { useStore, mapGetters, mapActions } from \"vuex\";\nimport VPagination from \"@hennge/vue3-pagination\";\nimport \"@hennge/vue3-pagination/dist/vue3-pagination.css\";\nimport 'vue-advanced-cropper/dist/style.css';\nimport 'vue-advanced-cropper/dist/theme.bubble.css';\nimport { VueFinalModal } from 'vue-final-modal';\nexport default {\n  components: {\n    Form,\n    Field,\n    ErrorMessage,\n    VPagination,\n    VueFinalModal\n  },\n\n  data() {\n    const store = useStore();\n    const validationCreate = yup.object().shape({\n      username: yup.string().required(\"Username is required!\").min(3, \"Must be at least 3 characters!\").max(20, \"Must be maximum 20 characters!\"),\n      email: yup.string().required(\"Email is required!\").email(\"Email is invalid!\").max(50, \"Must be maximum 50 characters!\"),\n      password: yup.string().required(\"Password is required\").min(6, \"Must be at least 6 characters!\").max(40, \"Must be maximum 40 characters!\"),\n      userrole: yup.number().typeError('User Role is required!').required(\"User Role is required!\"),\n      userstatus: yup.number().typeError('User Status is required!').required(\"User Role is required!\")\n    });\n    const validationEdit = yup.object().shape({\n      username: yup.string().required(\"Username is required!\").min(3, \"Must be at least 3 characters!\").max(20, \"Must be maximum 20 characters!\"),\n      email: yup.string().required(\"Email is required!\").email(\"Email is invalid!\").max(50, \"Must be maximum 50 characters!\"),\n      userrole: yup.number().typeError('User Role is required!').required(\"User Role is required!\"),\n      userstatus: yup.number().typeError('User Status is required!').required(\"User Role is required!\")\n    });\n    return {\n      backend_url: process.env.VUE_APP_API_URL,\n      store,\n      url: this.backendUrl + \"/api/users\",\n      users: {},\n      username: '',\n      email: '',\n      userrole: '',\n      password: '',\n      userstatus: '',\n      loading: false,\n      id: 0,\n      query: {\n        page: 1,\n        search: \"\"\n      },\n      myValue: '',\n      validationCreate: validationCreate,\n      validationEdit: validationEdit,\n      userForm: validationCreate,\n      image: \"https://images.pexels.com/photos/4218687/pexels-photo-4218687.jpeg\",\n      showModal: false\n    };\n  },\n\n  computed: { ...mapGetters([\"usersPaginatedData\", \"isLoading\", \"isDeleting\", \"deletedData\", \"isCreating\", \"createdData\", \"isUpdating\", \"updatedData\", \"formAction\", \"message\", \"successStatus\"])\n  },\n  methods: { ...mapActions([\"fetchAllUsers\", \"deleteUser\", \"storeUser\", \"updateUser\"]),\n\n    getResults() {\n      this.fetchAllUsers(this.query);\n    },\n\n    searchUsers() {\n      this.query.page = null;\n      this.fetchAllUsers(this.query);\n    },\n\n    handleUser(user) {\n      if (this.$store.getters.formAction == 'insert') {\n        this.storeUser({\n          name: user.username,\n          role_id: user.userrole,\n          email: user.email,\n          password: user.password,\n          status: user.userstatus\n        });\n      } else {\n        //edit\n        this.updateUser({\n          id: this.id,\n          name: user.username,\n          role_id: user.userrole,\n          email: user.email,\n          password: user.password,\n          status: user.userstatus\n        });\n      }\n    },\n\n    onEdit(user) {\n      this.id = user.id;\n      this.username = user.name;\n      this.email = user.email;\n      this.userrole = user.role_id;\n      this.userstatus = user.status;\n      this.$store.commit('fromActionStatus', 'edit');\n      this.userForm = this.validationEdit;\n    },\n\n    deleteUserModal(id) {\n      this.$swal.fire({\n        text: \"Are you sure to delete the user ?\",\n        icon: \"error\",\n        cancelButtonText: \"Cancel\",\n        confirmButtonText: \"Yes, Confirm Delete\",\n        showCancelButton: true\n      }).then(result => {\n        if (result[\"isConfirmed\"]) {\n          // Put delete logic\n          this.deleteUser(id);\n          this.fetchAllUsers({\n            page: 1,\n            search: ''\n          });\n          this.$swal.fire({\n            text: \"Success, User has been deleted.\",\n            icon: \"success\",\n            position: 'top-end',\n            timer: 1000\n          });\n        }\n      });\n    },\n\n    cropImage() {\n      const result = this.$refs.cropper.getResult();\n      const newTab = window.open(); // for testing open the result in a new tab\n\n      newTab.document.body.innerHTML = `<img src=\"${result.canvas.toDataURL(\"image/jpeg\")}\"></img>`;\n    },\n\n    selectImage(e) {\n      const file = e.target.files[0];\n      this.image = URL.createObjectURL(file);\n      this.showModal();\n    },\n\n    closeModal() {}\n\n  },\n\n  created() {\n    this.fetchAllUsers(this.query);\n  },\n\n  watch: {\n    createdData: function () {\n      if (this.createdData !== null && !this.isCreating) {\n        this.fetchAllUsers({\n          page: 1,\n          search: ''\n        });\n        this.$swal.fire({\n          text: \"Success, User has been added successfully.\",\n          icon: \"success\",\n          position: \"top-end\",\n          timer: 1000\n        });\n        this.$refs.form.resetForm();\n      }\n    },\n    updatedData: function () {\n      if (this.updatedData !== null && !this.isUpdating) {\n        this.fetchAllUsers({\n          page: 1,\n          search: ''\n        });\n        this.$store.commit('fromActionStatus', 'insert');\n        this.userForm = this.validationCreate;\n        this.$swal.fire({\n          text: \"Success, User has been Updated.\",\n          icon: \"success\",\n          position: \"top-end\",\n          timer: 1000\n        });\n        this.$refs.form.resetForm();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Form","Field","ErrorMessage","yup","useStore","mapGetters","mapActions","VPagination","VueFinalModal","components","data","store","validationCreate","object","shape","username","string","required","min","max","email","password","userrole","number","typeError","userstatus","validationEdit","backend_url","process","env","VUE_APP_API_URL","url","backendUrl","users","loading","id","query","page","search","myValue","userForm","image","showModal","computed","methods","getResults","fetchAllUsers","searchUsers","handleUser","user","$store","getters","formAction","storeUser","name","role_id","status","updateUser","onEdit","commit","deleteUserModal","$swal","fire","text","icon","cancelButtonText","confirmButtonText","showCancelButton","then","result","deleteUser","position","timer","cropImage","$refs","cropper","getResult","newTab","window","open","document","body","innerHTML","canvas","toDataURL","selectImage","e","file","target","files","URL","createObjectURL","closeModal","created","watch","createdData","isCreating","form","resetForm","updatedData","isUpdating"],"sourceRoot":"","sources":["/var/www/html/PMS_PROJECT/pds/src/components/User/User.vue"],"sourcesContent":["<template>\r\n  <div class=\"card card-default\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title\"><strong> Users</strong></h3>\r\n    </div>\r\n    <div class=\"card-body\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-3 form-bg\">\r\n          <Form @submit=\"handleUser\" :validation-schema=\"userForm\" ref=\"form\">\r\n            <div>\r\n              <div class=\"form-group\">\r\n                <label for=\"username\">Username*</label>\r\n                <Field name=\"username\" type=\"text\" v-model=\"username\" class=\"form-control\" autocomplete=\"off\"/>\r\n                <ErrorMessage name=\"username\" v-model=\"username\" class=\"error-feedback\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"userrole\">User Role*</label>\r\n                <Field name=\"userrole\" as=\"select\" class=\"form-control\" v-model=\"userrole\">\r\n                  <option value=\"\">-- Select Role --</option>\r\n                  <option value=\"1\">Admin</option>\r\n                  <option value=\"2\">Editor</option>\r\n                </Field>\r\n                <ErrorMessage name=\"userrole\" class=\"error-feedback\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"email\">Email*</label>\r\n                <Field name=\"email\" type=\"email\" class=\"form-control\" v-model=\"email\" autocomplete=\"off\"/>\r\n                <ErrorMessage name=\"email\" class=\"error-feedback\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"password\">Password*</label>\r\n                <Field name=\"password\" type=\"password\" class=\"form-control\" v-model=\"password\"/>\r\n                <ErrorMessage name=\"password\" class=\"error-feedback\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"userstatus\">Status*</label>\r\n                <Field name=\"userstatus\" as=\"select\" class=\"form-control\" v-model=\"userstatus\">\r\n                  <option value=\"\">-- Select Status --</option>\r\n                  <option value=\"1\">Active</option>\r\n                  <option value=\"0\">Inactive</option>\r\n                </Field>\r\n                <ErrorMessage name=\"userstatus\" class=\"error-feedback\" />\r\n              </div>\r\n              <a class=\"btn\" @click=\"toggleShow\">set avatar</a>\r\n\t<my-upload field=\"img\"\r\n        @crop-success=\"cropSuccess\"\r\n        @crop-upload-success=\"cropUploadSuccess\"\r\n        @crop-upload-fail=\"cropUploadFail\"\r\n        v-model=\"show\"\r\n\t\t:width=\"300\"\r\n\t\t:height=\"300\"\r\n\t\turl=\"/upload\"\r\n\t\t:params=\"params\"\r\n\t\t:headers=\"headers\"\r\n\t\timg-format=\"png\"></my-upload>\r\n\t<img :src=\"imgDataUrl\">\r\n              <div class=\"form-group\">\r\n                <button class=\"btn btn-primary mr-2\" :disabled=\"isCreating || isUpdating\">\r\n                  <span v-show=\"isCreating\" class=\"spinner-border spinner-border-sm\"></span>\r\n                  Submit\r\n                </button>\r\n\r\n                <button class=\"btn btn-danger ml-2\" type=\"reset\">Reset</button>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n\r\n          <div v-if=\"message\" class=\"alert\" :class=\"successful ? 'alert-success' : 'alert-danger'\" >\r\n            {{ message }}\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"col-md-9\">\r\n\r\n          <div class=\"user-list\" style=\"position:relative; top:-20px;\">\r\n            <div class=\"row justify-content-center mt-2 mb-2 ml-0 mr-0\">\r\n              <div class=\"col-8\">\r\n                \r\n              </div>\r\n              <div class=\"col-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  placeholder=\"Search Users...\"\r\n                  @input=\"searchUsers\"\r\n                  v-model=\"query.search\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"pl-2 pr-2\">\r\n              <div class=\"\" v-if=\"!isLoading\" style=\"border:1px solid #eeeeee\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"row border-bottom border-top p-2 bg-light\">\r\n                  <div class=\"col-1\">Sl</div>\r\n                  <div class=\"col-4\">User Name</div>\r\n                  <div class=\"col-3\">User Email</div>\r\n                  <div class=\"col-1\">Role</div>\r\n                  <div class=\"col-1\">Status</div>\r\n                  <div class=\"col-2\">Actions</div>\r\n                </div>\r\n              </div>\r\n                <div class=\"pt-1 pl-2 pb-1 pl-2 customize-border\" v-for=\"(item, index) in usersPaginatedData.data\" :key=\"item.id\">\r\n                  <div class=\"row border-1 pb-1\">\r\n                    <div class=\"col-1 text-left\">\r\n                      {{ index + 1 }}\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                      {{ item.name }}\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n                      <strong class=\"text-info\">{{ item.email }} </strong>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                      <span class=\"badge\" :class=\"item.role_id == 1 ? 'badge-success' : 'badge-info'\">{{ item.role_id == 1 ? 'Admin' : 'Editor'}}</span>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                      <span class=\"badge\" :class=\"item.status == 1 ? 'badge-success' : 'badge-info'\">{{ item.status == 1 ? 'Active' : 'Inactive'}}</span>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <button\r\n                        class=\"btn btn-warning mx-2 btn-sm\"\r\n                        title=\"Delete User\"\r\n                        @click=\"onEdit(item)\"\r\n                      >\r\n                      \r\n                        <font-awesome-icon icon=\"fa-solid  fa-pencil\" />\r\n                      </button>\r\n                      <button\r\n                        class=\"btn btn-danger mx-2 btn-sm\"\r\n                        title=\"Delete User\"\r\n                        @click=\"deleteUserModal(item.id)\">\r\n                        <font-awesome-icon icon=\"fa-solid  fa-trash\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div v-if=\"isLoading\" class=\"text-center mt-5 mb-5\">\r\n                Loading Users...\r\n                <div class=\"spinner-grow\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Insert Pagination Part -->\r\n            \r\n            <div v-if=\"usersPaginatedData !== null\" class=\"vertical-center mt-3 mb-5\">\r\n          \r\n              <v-pagination\r\n                v-model=\"query.page\"\r\n                :pages=\"usersPaginatedData.pagination.total_pages\"\r\n                :range-size=\"2\"\r\n                active-color=\"#DCEDFF\"\r\n                @update:modelValue=\"getResults\"\r\n                :class=\"justify-center\"\r\n              />\r\n            </div>        \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n    <vue-final-modal v-model=\"showModal\" classes=\"modal-container\" content-class=\"modal-content\">\r\n      <button class=\"modal__close\" @click=\"showModal = false\">\r\n        <mdi-close></mdi-close>\r\n      </button>\r\n      <span class=\"modal__title\">Hello, vue-final-modal</span>\r\n      <div class=\"modal__content\">\r\n        <p>Vue Final Modal is a renderless, stackable, detachable and lightweight modal component.</p>\r\n      </div>\r\n    </vue-final-modal>\r\n    <v-button class=\"d-none\" @click=\"showModal = true\">Open modal</v-button>\r\n  </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n\r\n\r\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\r\nimport * as yup from \"yup\";\r\nimport {useStore, mapGetters, mapActions } from \"vuex\"\r\nimport VPagination from \"@hennge/vue3-pagination\";\r\nimport \"@hennge/vue3-pagination/dist/vue3-pagination.css\";\r\n\r\nimport 'vue-advanced-cropper/dist/style.css';\r\nimport 'vue-advanced-cropper/dist/theme.bubble.css';\r\n\r\nimport { VueFinalModal } from 'vue-final-modal';\r\n\r\n\r\nexport default {\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n    VPagination,\r\n    VueFinalModal,\r\n  },\r\n\r\n  data() {\r\n    const store = useStore();\r\n    const validationCreate = yup.object().shape({\r\n          username: yup\r\n            .string()\r\n            .required(\"Username is required!\")\r\n            .min(3, \"Must be at least 3 characters!\")\r\n            .max(20, \"Must be maximum 20 characters!\"),\r\n          email: yup\r\n            .string()\r\n            .required(\"Email is required!\")\r\n            .email(\"Email is invalid!\")\r\n            .max(50, \"Must be maximum 50 characters!\"),\r\n\r\n          password: yup\r\n            .string()\r\n            .required(\"Password is required\")\r\n            .min(6, \"Must be at least 6 characters!\")\r\n            .max(40, \"Must be maximum 40 characters!\"),\r\n\r\n          userrole: yup\r\n            .number()\r\n            .typeError('User Role is required!')\r\n            .required(\"User Role is required!\"), \r\n          userstatus: yup\r\n            .number()\r\n            .typeError('User Status is required!')\r\n            .required(\"User Role is required!\")    \r\n      });\r\n\r\n      const validationEdit = yup.object().shape({\r\n          username: yup\r\n            .string()\r\n            .required(\"Username is required!\")\r\n            .min(3, \"Must be at least 3 characters!\")\r\n            .max(20, \"Must be maximum 20 characters!\"),\r\n          email: yup\r\n            .string()\r\n            .required(\"Email is required!\")\r\n            .email(\"Email is invalid!\")\r\n            .max(50, \"Must be maximum 50 characters!\"),\r\n\r\n          userrole: yup\r\n            .number()\r\n            .typeError('User Role is required!')\r\n            .required(\"User Role is required!\"), \r\n          userstatus: yup\r\n            .number()\r\n            .typeError('User Status is required!')\r\n            .required(\"User Role is required!\")    \r\n      });\r\n\r\n    return {\r\n      backend_url: process.env.VUE_APP_API_URL, \r\n      store,\r\n      url: this.backendUrl + \"/api/users\",\r\n      users: {},\r\n      username: '',\r\n      email: '',\r\n      userrole: '',\r\n      password: '',\r\n      userstatus: '',\r\n      loading: false,\r\n      id:0,\r\n      query: {\r\n        page: 1,\r\n        search: \"\",\r\n      },\r\n      myValue: '',\r\n      validationCreate: validationCreate,\r\n      validationEdit: validationEdit,\r\n      userForm: validationCreate, \r\n      image:\"https://images.pexels.com/photos/4218687/pexels-photo-4218687.jpeg\",\r\n      showModal: false, \r\n    };\r\n  },\r\n  \r\n  computed: { ...mapGetters([\"usersPaginatedData\", \"isLoading\",\"isDeleting\", \"deletedData\"\r\n              , \"isCreating\", \"createdData\", \"isUpdating\", \"updatedData\", \"formAction\",\"message\",\"successStatus\"]) },\r\n\r\n  methods: {\r\n    ...mapActions([\"fetchAllUsers\", \"deleteUser\", \"storeUser\",\"updateUser\",]),\r\n\r\n    getResults() {\r\n      this.fetchAllUsers(this.query);\r\n    },\r\n\r\n    searchUsers() {\r\n      this.query.page = null;\r\n      this.fetchAllUsers(this.query);\r\n    },\r\n\r\n    handleUser(user) {\r\n      if (this.$store.getters.formAction == 'insert'){\r\n        this.storeUser({\r\n          name: user.username,\r\n          role_id: user.userrole,\r\n          email: user.email,\r\n          password: user.password,\r\n          status: user.userstatus,\r\n        });                 \r\n      }else{  //edit\r\n        this.updateUser({\r\n          id: this.id,\r\n          name: user.username,\r\n          role_id: user.userrole,\r\n          email: user.email,\r\n          password: user.password,\r\n          status: user.userstatus,\r\n        });\r\n      }   \r\n    },\r\n\r\n    onEdit(user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.email = user.email;\r\n      this.userrole = user.role_id;\r\n      this.userstatus = user.status;\r\n      this.$store.commit('fromActionStatus', 'edit');\r\n      this.userForm = this.validationEdit;\r\n    },\r\n\r\n    deleteUserModal(id) {\r\n      this.$swal\r\n        .fire({\r\n          text: \"Are you sure to delete the user ?\",\r\n          icon: \"error\",\r\n          cancelButtonText: \"Cancel\",\r\n          confirmButtonText: \"Yes, Confirm Delete\",\r\n          showCancelButton: true,\r\n        })\r\n        .then((result) => {\r\n          if (result[\"isConfirmed\"]) {\r\n            // Put delete logic\r\n            this.deleteUser(id);\r\n            this.fetchAllUsers({\r\n              page: 1,\r\n              search: ''\r\n            });\r\n            this.$swal.fire({\r\n              text: \"Success, User has been deleted.\",\r\n              icon: \"success\",\r\n              position: 'top-end',\r\n              timer: 1000,\r\n            });\r\n          }\r\n        });\r\n    }, \r\n\r\n\r\n\r\n    cropImage() {\r\n      const result = this.$refs.cropper.getResult();\r\n      const newTab = window.open();\r\n      // for testing open the result in a new tab\r\n      newTab.document.body.innerHTML = `<img src=\"${result.canvas.toDataURL(\r\n        \"image/jpeg\"\r\n      )}\"></img>`;\r\n    },\r\n\r\n    selectImage(e){\r\n      const file = e.target.files[0];\r\n      this.image = URL.createObjectURL(file);\r\n      this.showModal();\r\n    },\r\n\r\n    closeModal(){\r\n\r\n    }\r\n\r\n  },\r\n\r\n  created() {\r\n    this.fetchAllUsers(this.query);\r\n  },\r\n\r\n  watch: {\r\n    createdData: function () {\r\n      if (this.createdData !== null && !this.isCreating) {\r\n        this.fetchAllUsers({\r\n              page: 1,\r\n              search: ''\r\n            });\r\n        this.$swal.fire({\r\n          text: \"Success, User has been added successfully.\",\r\n          icon: \"success\",\r\n          position: \"top-end\",\r\n          timer: 1000,\r\n        });\r\n        this.$refs.form.resetForm();\r\n      }\r\n    },\r\n\r\n    updatedData: function () {\r\n      if (this.updatedData !== null && !this.isUpdating) {\r\n        this.fetchAllUsers({\r\n              page: 1,\r\n              search: ''\r\n            });\r\n        this.$store.commit('fromActionStatus', 'insert');\r\n        this.userForm = this.validationCreate;\r\n        this.$swal.fire({\r\n          text: \"Success, User has been Updated.\",\r\n          icon: \"success\",\r\n          position: \"top-end\",\r\n          timer: 1000,\r\n        });\r\n        this.$refs.form.resetForm();\r\n      }\r\n    },\r\n\r\n\r\n\r\n  },\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n.ui.inverted.dimmer {\r\n  color: #009688 !important;\r\n\r\n}\r\n\r\n.cropper {\r\n\theight: 400px;\r\n\twidth: 400px;\r\n\tbackground: #DDD;\r\n}\r\n\r\n\r\n.file-btn {\r\n  position: relative;\r\n  display: block;\r\n  cursor: pointer;\r\n}\r\n.file-btn input {\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n}    \r\n    \r\n\r\n</style>\r\n\r\n<style scoped>\r\n  ::v-deep .modal-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  ::v-deep .modal-content {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 1rem;\r\n    padding: 1rem;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 0.25rem;\r\n    background: #fff;\r\n  }\r\n  .modal__title {\r\n    margin: 0 2rem 0 0;\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n  }\r\n  .modal__close {\r\n    position: absolute;\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n  }\r\n  </style>\r\n  \r\n  <style scoped>\r\n  .dark-mode div::v-deep .modal-content {\r\n    border-color: #2d3748;\r\n    background-color: #1a202c;\r\n  }\r\n  </style>"]},"metadata":{},"sourceType":"module"}