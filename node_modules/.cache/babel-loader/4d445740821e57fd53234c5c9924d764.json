{"ast":null,"code":"import \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"datatables.net-dt/js/dataTables.dataTables\";\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\nimport $ from \"jquery\";\nimport { Form, Field } from 'vee-validate';\nimport * as Yup from \"yup\"; // DataTable.use(DataTablesCore);\n\nexport default {\n  components: {\n    // DataTable,\n    Form,\n    Field\n  },\n\n  data() {\n    const storageData = JSON.parse(localStorage.getItem('user'));\n    const schema = Yup.object().shape({\n      transfer_type: Yup.string().required(\"Transfer Type is required\"),\n      to_department: Yup.string().required(\"To Department is required\"),\n      from_department: Yup.string().required(\"From Department is required\"),\n      transfer_date: Yup.date().required(\"Transfer Date is required\").typeError(\"Invalid date format\"),\n      transfer_order_number: Yup.string().required(\"Transfer Order Number is required\"),\n      to_designation: Yup.string().required(\"To Designation is required\"),\n      from_designation: Yup.string().required(\"From Designation is required\"),\n      join_date: Yup.date().required(\"Join Date is required\").typeError(\"Invalid date format\"),\n      to_office: Yup.string().required(\"To Office is required\"),\n      from_office: Yup.string().required(\"From Office is required\"),\n      transfer_order: Yup.string().required(\"Transfer Order is required\"),\n      transfer_letter: Yup.string().required(\"Transfer Letter is required\")\n    });\n    return {\n      schema,\n      backend_url: process.env.VUE_APP_API_URL,\n      storageData,\n      user: \"\",\n      departments: \"\",\n      designations: \"\",\n      transferType: \"\",\n      office: \"\",\n      edit: false,\n      url: this.backendUrl + \"/api/users\",\n      basicInfo: {\n        name: '',\n        mobileNumber: '',\n        email: '',\n        designation: '',\n        designation_id: '',\n        image: ''\n      },\n      transferRecordById: [],\n      transferList1: [],\n      tansfer: {\n        employee_id: \"\",\n        transfer_type: \"\",\n        transfer_order: \"\",\n        transfer_order_number: \"\",\n        to_office: \"\",\n        from_office: \"\",\n        to_department: \"\",\n        from_department: \"\",\n        to_designation: \"\",\n        from_designation: \"\",\n        transfer_date: \"\",\n        join_date: \"\",\n        transfer_letter: \"\"\n      }\n    };\n  },\n\n  computed: {},\n  methods: {\n    clear() {\n      this.tansfer.transfer_type = \"\";\n      this.tansfer.transfer_order = \"\";\n      this.tansfer.transfer_order_number = \"\";\n      this.tansfer.to_office = \"\";\n      this.tansfer.from_office = \"\";\n      this.tansfer.to_designation = \"\";\n      this.tansfer.from_designation = \"\";\n      this.tansfer.transfer_date = \"\";\n      this.tansfer.join_date = \"\";\n      this.tansfer.transfer_letter = \"\";\n      this.tansfer.to_department = \"\";\n      this.tansfer.from_department = \"\";\n    },\n\n    editbutton(id) {\n      console.log(id);\n      this.axios.get(this.backend_url + 'specificUserTransferRecord/' + id).then(response => {\n        this.transferRecordById = response.data.data;\n        console.log(this.transferRecordById);\n        this.tansfer.id = id;\n        this.tansfer.employee_name = this.transferRecordById.employee_name;\n        this.tansfer.employee_id = this.transferRecordById.employee_id;\n        this.tansfer.transfer_type = this.transferRecordById.transfer_type;\n        this.tansfer.transfer_order = this.transferRecordById.transfer_order;\n        this.tansfer.transfer_order_number = this.transferRecordById.transfer_order_number;\n        this.tansfer.to_office = this.transferRecordById.to_office;\n        this.tansfer.from_office = this.transferRecordById.from_office;\n        this.tansfer.to_designation = this.transferRecordById.to_designation;\n        this.tansfer.from_designation = this.transferRecordById.from_designation;\n        this.tansfer.transfer_date = this.transferRecordById.transfer_date;\n        this.tansfer.join_date = this.transferRecordById.join_date;\n        this.tansfer.transfer_letter = this.transferRecordById.transfer_letter;\n        this.tansfer.to_department = this.transferRecordById.to_department;\n        this.tansfer.from_department = this.transferRecordById.from_department;\n        this.edit = true;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n\n    deletebutton(id) {\n      this.axios.delete(this.backend_url + 'deleteTransferRecord/' + id).then(res => {\n        console.log('Delete Successfully', res);\n        this.getTransferList();\n        $('#datatable').DataTable().destroy();\n        this.$toast.error(`Delete Successfully!!`);\n      });\n    },\n\n    viewDetails(id) {\n      console.log(id);\n      this.axios.get(this.backend_url + 'specificUserTransferRecord/' + id).then(response => {\n        console.log(response);\n        this.transferRecordById = response.data.data;\n        console.log(this.transferRecordById.transfer_type);\n        this.tansfer.id = id;\n        this.tansfer.employee_name = this.transferRecordById.employee_name;\n        this.tansfer.employee_id = this.transferRecordById.employee_id;\n        this.tansfer.transfer_type = this.transferRecordById.transfer_type;\n        this.tansfer.transfer_order = this.transferRecordById.transfer_order;\n        this.tansfer.transfer_order_number = this.transferRecordById.transfer_order_number;\n        this.tansfer.to_office = this.transferRecordById.to_office;\n        this.tansfer.from_office = this.transferRecordById.from_office;\n        this.tansfer.to_designation = this.transferRecordById.to_designation;\n        this.tansfer.from_designation = this.transferRecordById.from_designation;\n        this.tansfer.transfer_date = this.transferRecordById.transfer_date;\n        this.tansfer.join_date = this.transferRecordById.join_date;\n        this.tansfer.transfer_letter = this.transferRecordById.transfer_letter;\n        this.tansfer.to_department = this.transferRecordById.to_department;\n        this.tansfer.from_department = this.transferRecordById.from_department;\n        this.edit = false;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n\n    getTransferList() {\n      this.axios.get(this.backend_url + 'getTransferList/').then(response => {\n        this.transferList1 = response.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n\n    getDepartmentList() {\n      this.axios.get(this.backend_url + 'getDepartment').then(res => {\n        // console.log(res.data.data);\n        this.departments = res.data.data;\n      });\n    },\n\n    getDesignationList() {\n      this.axios.get(this.backend_url + 'getDesignationMgt').then(res => {\n        this.designations = res.data.data; // console.log(this.designations);\n      });\n    },\n\n    getTransfertype() {\n      this.axios.get(this.backend_url + 'transferType').then(res => {\n        this.transferType = res.data.list; // console.log('fddsfsdf');\n        // console.log(this.transferType[0].title);\n      });\n    },\n\n    getUser() {\n      this.axios.get(this.backend_url + `users/${this.storageData.id}`).then(res => {\n        this.user = res.data.userDetail.employee_id; // console.log(this.user);\n\n        this.tansfer.employee_id = this.user; // console.log(this.storageData.id);\n      });\n    },\n\n    getOffice() {\n      this.axios.get(this.backend_url + `getOfficeMgt`).then(response => {\n        this.office = response.data.list; // console.log(this.office);\n      });\n    },\n\n    saveTranfer() {\n      try {\n        // this.tansfer.employee_id = this.storageData.id;\n        this.edit = false;\n        this.axios.post(this.backend_url + 'addTransferRecord', this.tansfer).then(res => {\n          console.log(res);\n          this.getTransferList();\n          $(\"#exampleModal\").modal('hide');\n          $('#datatable').DataTable().destroy();\n          this.$toast.success(`Add Data Successfully!`);\n        }).catch(error => {\n          console.error(\"An error occurred while saving the transfer record:\", error);\n          this.$toast.error(`Failed to save transfer record.`);\n        });\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n        this.$toast.error(`Failed to save transfer record.`);\n      }\n    },\n\n    EditTranfer() {\n      try {\n        this.axios.post(this.backend_url + `updateTransferRecord/${this.tansfer.id}`, this.tansfer).then(res => {\n          console.log(res);\n          this.getTransferList();\n          $(\"#exampleModal\").modal('hide');\n          $('#datatable').DataTable().destroy();\n          this.$toast.success(`Update Data Successfully!`);\n        }).catch(error => {\n          console.error(\"An error occurred while updating the transfer record:\", error);\n          this.$toast.error(`Failed to update transfer record.`);\n        });\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n        this.$toast.error(`Failed to update transfer record.`);\n      }\n    }\n\n  },\n\n  created() {\n    this.getTransferList();\n    this.getDepartmentList();\n    this.getDesignationList();\n    this.getTransfertype();\n    this.getUser();\n    this.getOffice();\n  },\n\n  mounted() {},\n\n  watch: {}\n};","map":{"version":3,"mappings":"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","names":["$","Form","Field","Yup","components","data","storageData","JSON","parse","localStorage","getItem","schema","object","shape","transfer_type","string","required","to_department","from_department","transfer_date","date","typeError","transfer_order_number","to_designation","from_designation","join_date","to_office","from_office","transfer_order","transfer_letter","backend_url","process","env","VUE_APP_API_URL","user","departments","designations","transferType","office","edit","url","backendUrl","basicInfo","name","mobileNumber","email","designation","designation_id","image","transferRecordById","transferList1","tansfer","employee_id","computed","methods","clear","editbutton","id","console","log","axios","get","then","response","employee_name","catch","e","deletebutton","delete","res","getTransferList","DataTable","destroy","$toast","error","viewDetails","getDepartmentList","getDesignationList","getTransfertype","list","getUser","userDetail","getOffice","saveTranfer","post","modal","success","EditTranfer","created","mounted","watch"],"sourceRoot":"","sources":["C:\\Users\\Jubair\\Desktop\\pds\\src\\components\\Transfer\\Admin_Transfer.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h5><i class=\"fa fa-thin fa-arrow-left\"></i> Transfer</h5>\r\n        <div class=\"card card-default\">\r\n            <div class=\"card-body\">\r\n                <div style=\"display: flex;justify-content: space-between;\">\r\n                    <h3>My Transfer History</h3>\r\n                    <a href=\"/\" class=\"btn btn-outline-primary mb-2\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                        @click=\"clear()\">+ Add\r\n                        Transfer</a>\r\n\r\n                    <!-- hidden model  -->\r\n                    <!-- Add and Edit Modal -->\r\n\r\n                    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\"\r\n                        aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div class=\"modal-dialog\" role=\"document\">\r\n                            <div class=\"modal-content\" style=\"width: 82vw;left: -457px;top: 164px;\">\r\n                                <div class=\"modal-header\">\r\n                                    <h5 class=\"modal-title text-center\" id=\"exampleModalLabel\">Add Transfer</h5>\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <Form @submit.prevent=\"edit ? saveTranfer : EditTranfer\" :validation-schema=\"schema\"\r\n                                        v-slot=\"{ errors }\">\r\n                                        <div>\r\n                                            <div class=\"row\">\r\n                                                {{ tansfer }}\r\n                                                <div class=\"col-4\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input type=\"text\" v-model=\"tansfer.employee_id\"\r\n                                                            style=\"display:none;\" autocomplete=\"off\">\r\n                                                        <!-- <div class=\"invalid-feedback\">{{ errors.name }}</div> -->\r\n\r\n                                                        <label for=\"exampleFormControlSelect1\">Transfer Type </label>\r\n\r\n\r\n\r\n                                                        <Field name=\"transfer_type\" as=\"select\"\r\n                                                            v-model=\"tansfer.transfer_type\" class=\"form-control\"\r\n                                                            :class=\"{ 'is-invalid': errors.transfer_type }\"\r\n                                                            autocomplete=\"off\">\r\n                                                            <option v-for=\"transferType in transferType\"\r\n                                                                :key=\"transferType.id\" v-bind:value=\"transferType.id\">\r\n                                                                {{ transferType.title }}</option>\r\n                                                        </Field>\r\n                                                        <div class=\"invalid-feedback\">{{ errors.transfer_type }}</div>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div class=\"d-flex\">\r\n                                                        <div class=\"form-group mr-2 w-50\">\r\n                                                            <label for=\"exampleFormControlSelect1\">To Department</label>\r\n                                                            <Field class=\"form-control\" as=\"select\"\r\n                                                                id=\"exampleFormControlSelect1\"\r\n                                                                v-model=\"tansfer.to_department\" name=\"to_department\"\r\n                                                                :class=\"{ 'is-invalid': errors.to_department }\">\r\n                                                                <option v-for=\"department in departments\"\r\n                                                                    :key=\"department.id\" v-bind:value=\"department.id\">{{\r\n                                                                        department.dept_name }}</option>\r\n                                                            </Field>\r\n                                                            <div class=\"invalid-feedback\">{{ errors.to_department }}</div>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div class=\"form-group mr-2 w-50\">\r\n                                                            <label for=\"exampleFormControlSelect1\">From Department</label>\r\n                                                            <Field class=\"form-control\" as=\"select\"\r\n                                                                id=\"exampleFormControlSelect1\"\r\n                                                                v-model=\"tansfer.from_department\" name=\"from_department\"\r\n                                                                :class=\"{ 'is-invalid': errors.from_department }\">\r\n                                                                <option v-for=\"department in departments\"\r\n                                                                    :key=\"department.id\" v-bind:value=\"department.id\">{{\r\n                                                                        department.dept_name }}</option>\r\n                                                            </Field>\r\n                                                            <div class=\"invalid-feedback\">{{ errors.from_department }}</div>\r\n\r\n                                                        </div>\r\n\r\n\r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <label for=\"exampleInputEmail1\">Transfer Date</label>\r\n                                                        <Field type=\"date\" class=\"form-control\" id=\"exampleInputEmail1\"\r\n                                                            aria-describedby=\"emailHelp\" placeholder=\"Enter email\"\r\n                                                            v-model=\"tansfer.transfer_date\" name=\"transfer_date\"\r\n                                                            :class=\"{ 'is-invalid': errors.transfer_date }\" />\r\n                                                        <div class=\"invalid-feedback\">{{ errors.transfer_date }}</div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"col-4\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <label for=\"exampleInputEmail1\">Transfer Order Number</label>\r\n                                                        <Field type=\"number\" class=\"form-control\" id=\"exampleInputEmail1\"\r\n                                                            aria-describedby=\"emailHelp\" placeholder=\"Transfer Order Number\"\r\n                                                            v-model=\"tansfer.transfer_order_number\"\r\n                                                            name=\"transfer_order_number\"\r\n                                                            :class=\"{ 'is-invalid': errors.transfer_order_number }\" />\r\n                                                        <div class=\"invalid-feedback\">{{ errors.transfer_order_number }}\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n\r\n                                                    <div class=\"d-flex\">\r\n                                                        <div class=\"form-group mr-2 w-50\">\r\n                                                            <label for=\"exampleFormControlSelect1\">To Designation</label>\r\n                                                            <Field as=\"select\" class=\"form-control\"\r\n                                                                id=\"exampleFormControlSelect1\"\r\n                                                                v-model=\"tansfer.to_designation\" name=\"to_designation\"\r\n                                                                :class=\"{ 'is-invalid': errors.to_designation }\">\r\n\r\n                                                                <option v-for=\"designation in designations\"\r\n                                                                    :key=\"designation.id\" v-bind:value=\"designation.id\">\r\n                                                                    {{ designation.designation_name }}</option>\r\n\r\n                                                            </Field>\r\n                                                            <div class=\"invalid-feedback\">{{ errors.to_designation }}</div>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div class=\"form-group mr-2 w-50\">\r\n                                                            <label for=\"exampleFormControlSelect1\">From Designation</label>\r\n                                                            <Field as=\"select\" class=\"form-control\"\r\n                                                                id=\"exampleFormControlSelect1\"\r\n                                                                v-model=\"tansfer.from_designation\" name=\"from_designation\"\r\n                                                                :class=\"{ 'is-invalid': errors.from_designation }\">\r\n\r\n                                                                <option v-for=\"designation in designations\"\r\n                                                                    :key=\"designation.id\" v-bind:value=\"designation.id\">\r\n                                                                    {{ designation.designation_name }}</option>\r\n\r\n                                                            </Field>\r\n                                                            <div class=\"invalid-feedback\">{{ errors.from_designation }}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div class=\"form-group\">\r\n                                                        <label for=\"exampleInputEmail1\">Join Date</label>\r\n                                                        <Field type=\"date\" class=\"form-control\" id=\"exampleInputEmail1\"\r\n                                                            aria-describedby=\"emailHelp\" placeholder=\"Enter email\"\r\n                                                            v-model=\"tansfer.join_date\" name=\"join_date\"\r\n                                                            :class=\"{ 'is-invalid': errors.join_date }\" />\r\n                                                        <div class=\"invalid-feedback\">{{ errors.join_date }}</div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n\r\n                                                <div class=\"col-4\">\r\n                                                    <div class=\"d-flex\">\r\n                                                        <div class=\"form-group mr-2 w-50\">\r\n                                                            <label for=\"exampleFormControlSelect1\">To Office</label>\r\n                                                            <Field as=\"select\" class=\"form-control\"\r\n                                                                id=\"exampleFormControlSelect1\" v-model=\"tansfer.to_office\"\r\n                                                                name=\"to_office\"\r\n                                                                :class=\"{ 'is-invalid': errors.to_office }\">\r\n\r\n                                                                <option v-for=\"office in office\" :key=\"office.id\"\r\n                                                                    v-bind:value=\"office.id\">\r\n                                                                    {{ office.office_name }}</option>\r\n\r\n                                                            </Field>\r\n                                                            <div class=\"invalid-feedback\">{{ errors.to_office }}</div>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div class=\"form-group mr-2 w-50\">\r\n                                                            <label for=\"exampleFormControlSelect1\">From Office</label>\r\n                                                            <Field as=\"select\" class=\"form-control\"\r\n                                                                id=\"exampleFormControlSelect1\" v-model=\"tansfer.from_office\"\r\n                                                                name=\"from_office\"\r\n                                                                :class=\"{ 'is-invalid': errors.from_office }\">\r\n\r\n                                                                <option v-for=\"office in office\" :key=\"office.id\"\r\n                                                                    v-bind:value=\"office.id\">\r\n                                                                    {{ office.office_name }}</option>\r\n\r\n                                                            </Field>\r\n                                                            <div class=\"invalid-feedback\">{{ errors.from_office }}</div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div class=\"form-group\">\r\n                                                        <label for=\"exampleFormControlSelect1\">Transfer Order</label>\r\n                                                        <Field type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\"\r\n                                                            aria-describedby=\"emailHelp\" placeholder=\"Transfer Order\"\r\n                                                            v-model=\"tansfer.transfer_order\" name=\"transfer_order\"\r\n                                                            :class=\"{ 'is-invalid': errors.transfer_order }\" />\r\n                                                        <div class=\"invalid-feedback\">{{ errors.transfer_order }}</div>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div class=\"mb-3\">\r\n                                                        <label for=\"formFileSm\" class=\"form-label\">Transfer Letter</label>\r\n                                                        <Field type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\"\r\n                                                            aria-describedby=\"emailHelp\" placeholder=\"Transfer Letter\"\r\n                                                            v-model=\"tansfer.transfer_letter\" name=\"transfer_letter\"\r\n                                                            :class=\"{ 'is-invalid': errors.transfer_letter }\" />\r\n                                                        <div class=\"invalid-feedback\">{{ errors.transfer_letter }}</div>\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"modal-footer d-flex justify-content-center\">\r\n                                            <button type=\"button\" class=\"btn btn-secondary\"\r\n                                                data-dismiss=\"modal\">Cancel</button>\r\n                                            <button type=\"submit\" class=\"btn btn-primary\" @click=\"EditTranfer()\"\r\n                                                v-if=\"edit\">Edit</button>\r\n                                            <button type=\"submit\" class=\"btn btn-primary\" @click=\"saveTranfer()\"\r\n                                                v-else>Add</button>\r\n                                        </div>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--End Add and Edit Modal -->\r\n\r\n\r\n                    <!-- Transter Details Modal -->\r\n\r\n                    <div class=\"modal fade\" id=\"exampleModal2\" tabindex=\"-1\" role=\"dialog\"\r\n                        aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div class=\"modal-dialog\" role=\"document\">\r\n                            <div class=\"modal-content\" style=\"width: 121%; top: 164px;\">\r\n                                <div class=\"modal-header\">\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"modal-body card\">\r\n                                    <div class=\"card-body d-flex flex-column\">\r\n                                        <h5 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"font-size: 25px;\">\r\n                                            Transfer Details\r\n                                        </h5>\r\n                                        <hr>\r\n                                        <h1 class=\"card-title \">Transfer Type: {{ tansfer.transfer_type }}</h1>\r\n                                        <h5 class=\"card-title\">Transfer Order: {{ tansfer.transfer_order }}</h5>\r\n                                        <h5 class=\"card-title\">Transfer Order Number: {{ tansfer.transfer_order_number }}\r\n                                        </h5>\r\n                                        <h5 class=\"card-title\">To Office: {{ tansfer.to_office }}</h5>\r\n                                        <h5 class=\"card-title\">From Office: {{ tansfer.from_office }}</h5>\r\n                                        <h5 class=\"card-title\">To Designation: {{ tansfer.to_designation }}</h5>\r\n                                        <h5 class=\"card-title\">From Designation: {{ tansfer.from_designation }}</h5>\r\n                                        <h5 class=\"card-title\">Transfer Date: {{ tansfer.transfer_date }}</h5>\r\n                                        <h5 class=\"card-title\">Join Date: {{ tansfer.join_date }}</h5>\r\n                                        <h5 class=\"card-title\">Transfer Letter: {{ tansfer.transfer_letter }}</h5>\r\n                                        <h5 class=\"card-title\">To Department: {{ tansfer.to_department }}</h5>\r\n                                        <h5 class=\"card-title\">From Department: {{ tansfer.from_department }}</h5>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <!-- End Transter Details Modal -->\r\n\r\n\r\n                </div>\r\n\r\n                <hr>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n\r\n                        <table class=\"table text-center\" id=\"datatable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Employee</th>\r\n                                    <th>To Department</th>\r\n                                    <th>From Department</th>\r\n                                    <th>To Designation</th>\r\n                                    <th>From Designation</th>\r\n                                    <th>Transfer Type</th>\r\n                                    <th>Transfer Order</th>\r\n                                    <th>To Office</th>\r\n                                    <th>From office</th>\r\n                                    <th>Transfer Date</th>\r\n                                    <th>Join Date</th>\r\n                                    <th>Status</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(item, index) in transferList1.data\" :key=\"index\">\r\n                                    <td>{{ item.id }}</td>\r\n                                    <td>{{ item.employee_name }}</td>\r\n                                    <td>{{ item.to_department }}</td>\r\n                                    <td>{{ item.from_department }}</td>\r\n                                    <td>{{ item.to_designation }}</td>\r\n                                    <td>{{ item.from_designation }}</td>\r\n                                    <td>{{ item.t_type }}</td>\r\n                                    <td>{{ item.transfer_order }}</td>\r\n                                    <td>{{ item.to_office }}</td>\r\n                                    <td>{{ item.from_office }}</td>\r\n                                    <td>{{ item.transfer_date }}</td>\r\n                                    <td>{{ item.join_date }}</td>\r\n                                    <td>\r\n                                        <p v-if=\"item.status == 1\" class=\"text-warning font-weight-bold\"> Verified</p>\r\n                                        <p v-else class=\"text-success font-weight-bold\">Pending</p>\r\n                                    </td>\r\n                                    <td style=\"width: 185px;\">\r\n                                        <button v-if=\"item.status === 1\" @click=\"viewDetails(item.id)\"\r\n                                            class=\"btn btn-outline-primary mr-2\"\r\n                                            style=\"border: 3px solid;font-weight: bolder; width: 124px;\" data-toggle=\"modal\"\r\n                                            data-target=\"#exampleModal2\">\r\n                                            View Details\r\n                                        </button>\r\n                                        <div v-else>\r\n                                            <button @click=\"editbutton(item.id)\" class=\"btn btn-primary mr-2\"\r\n                                                data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                                                Edit\r\n                                            </button>\r\n                                            <button @click=\"deletebutton(item.id)\" class=\"btn btn-danger mr-2\">\r\n                                                Delete\r\n                                            </button>\r\n                                        </div>\r\n\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Modal Start -->\r\n\r\n\r\n\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\n\r\nimport \"jquery/dist/jquery.min.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport $ from \"jquery\";\r\nimport { Form, Field } from 'vee-validate';\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\n// DataTable.use(DataTablesCore);\r\nexport default {\r\n    components: {\r\n        // DataTable,\r\n        Form, Field\r\n\r\n    },\r\n\r\n\r\n    data() {\r\n        const storageData = JSON.parse(localStorage.getItem('user'));\r\n        const schema = Yup.object().shape({\r\n            transfer_type: Yup.string().required(\"Transfer Type is required\"),\r\n            to_department: Yup.string().required(\"To Department is required\"),\r\n            from_department: Yup.string().required(\"From Department is required\"),\r\n            transfer_date: Yup.date().required(\"Transfer Date is required\").typeError(\"Invalid date format\"),\r\n            transfer_order_number: Yup.string().required(\"Transfer Order Number is required\"),\r\n            to_designation: Yup.string().required(\"To Designation is required\"),\r\n            from_designation: Yup.string().required(\"From Designation is required\"),\r\n            join_date: Yup.date().required(\"Join Date is required\").typeError(\"Invalid date format\"),\r\n            to_office: Yup.string().required(\"To Office is required\"),\r\n            from_office: Yup.string().required(\"From Office is required\"),\r\n            transfer_order: Yup.string().required(\"Transfer Order is required\"),\r\n            transfer_letter: Yup.string().required(\"Transfer Letter is required\"),\r\n        });\r\n\r\n\r\n\r\n        return {\r\n            schema,\r\n            backend_url: process.env.VUE_APP_API_URL,\r\n            storageData,\r\n            user: \"\",\r\n            departments: \"\",\r\n            designations: \"\",\r\n            transferType: \"\",\r\n            office: \"\",\r\n            edit: false,\r\n            url: this.backendUrl + \"/api/users\",\r\n            basicInfo: {\r\n                name: '',\r\n                mobileNumber: '',\r\n                email: '',\r\n                designation: '',\r\n                designation_id: '',\r\n                image: '',\r\n            },\r\n            transferRecordById: [],\r\n            transferList1: [],\r\n            tansfer: {\r\n                employee_id: \"\",\r\n                transfer_type: \"\",\r\n                transfer_order: \"\",\r\n                transfer_order_number: \"\",\r\n                to_office: \"\",\r\n                from_office: \"\",\r\n                to_department: \"\",\r\n                from_department: \"\",\r\n                to_designation: \"\",\r\n                from_designation: \"\",\r\n                transfer_date: \"\",\r\n                join_date: \"\",\r\n                transfer_letter: \"\"\r\n            }\r\n\r\n        };\r\n    },\r\n\r\n    computed: {},\r\n\r\n    methods: {\r\n        clear() {\r\n            this.tansfer.transfer_type = \"\";\r\n            this.tansfer.transfer_order = \"\";\r\n            this.tansfer.transfer_order_number = \"\";\r\n            this.tansfer.to_office = \"\";\r\n            this.tansfer.from_office = \"\";\r\n            this.tansfer.to_designation = \"\";\r\n            this.tansfer.from_designation = \"\";\r\n            this.tansfer.transfer_date = \"\";\r\n            this.tansfer.join_date = \"\";\r\n            this.tansfer.transfer_letter = \"\";\r\n            this.tansfer.to_department = \"\";\r\n            this.tansfer.from_department = \"\";\r\n        },\r\n        editbutton(id) {\r\n            console.log(id);\r\n            this.axios\r\n                .get(this.backend_url + 'specificUserTransferRecord/' + id)\r\n                .then((response) => {\r\n                    this.transferRecordById = response.data.data;\r\n                    console.log(this.transferRecordById);\r\n                    this.tansfer.id = id;\r\n                    this.tansfer.employee_name = this.transferRecordById.employee_name;\r\n                    this.tansfer.employee_id = this.transferRecordById.employee_id;\r\n                    this.tansfer.transfer_type = this.transferRecordById.transfer_type;\r\n                    this.tansfer.transfer_order = this.transferRecordById.transfer_order;\r\n                    this.tansfer.transfer_order_number = this.transferRecordById.transfer_order_number;\r\n                    this.tansfer.to_office = this.transferRecordById.to_office;\r\n                    this.tansfer.from_office = this.transferRecordById.from_office;\r\n                    this.tansfer.to_designation = this.transferRecordById.to_designation;\r\n                    this.tansfer.from_designation = this.transferRecordById.from_designation;\r\n                    this.tansfer.transfer_date = this.transferRecordById.transfer_date;\r\n                    this.tansfer.join_date = this.transferRecordById.join_date;\r\n                    this.tansfer.transfer_letter = this.transferRecordById.transfer_letter;\r\n                    this.tansfer.to_department = this.transferRecordById.to_department;\r\n                    this.tansfer.from_department = this.transferRecordById.from_department;\r\n\r\n                    this.edit = true;\r\n\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e)\r\n                })\r\n        },\r\n        deletebutton(id) {\r\n            this.axios\r\n                .delete(this.backend_url + 'deleteTransferRecord/' + id)\r\n                .then((res) => {\r\n                    console.log('Delete Successfully', res);\r\n                    this.getTransferList();\r\n                    $('#datatable').DataTable().destroy();\r\n                    this.$toast.error(`Delete Successfully!!`);\r\n\r\n                })\r\n        },\r\n        viewDetails(id) {\r\n            console.log(id);\r\n            this.axios\r\n                .get(this.backend_url + 'specificUserTransferRecord/' + id)\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    this.transferRecordById = response.data.data;\r\n                    console.log(this.transferRecordById.transfer_type);\r\n                    this.tansfer.id = id;\r\n                    this.tansfer.employee_name = this.transferRecordById.employee_name;\r\n                    this.tansfer.employee_id = this.transferRecordById.employee_id;\r\n                    this.tansfer.transfer_type = this.transferRecordById.transfer_type;\r\n                    this.tansfer.transfer_order = this.transferRecordById.transfer_order;\r\n                    this.tansfer.transfer_order_number = this.transferRecordById.transfer_order_number;\r\n                    this.tansfer.to_office = this.transferRecordById.to_office;\r\n                    this.tansfer.from_office = this.transferRecordById.from_office;\r\n                    this.tansfer.to_designation = this.transferRecordById.to_designation;\r\n                    this.tansfer.from_designation = this.transferRecordById.from_designation;\r\n                    this.tansfer.transfer_date = this.transferRecordById.transfer_date;\r\n                    this.tansfer.join_date = this.transferRecordById.join_date;\r\n                    this.tansfer.transfer_letter = this.transferRecordById.transfer_letter;\r\n                    this.tansfer.to_department = this.transferRecordById.to_department;\r\n                    this.tansfer.from_department = this.transferRecordById.from_department;\r\n\r\n                    this.edit = false;\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e)\r\n                })\r\n        },\r\n        getTransferList() {\r\n            this.axios\r\n                .get(this.backend_url + 'getTransferList/')\r\n                .then((response) => {\r\n                    this.transferList1 = response.data;\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                });\r\n        },\r\n\r\n        getDepartmentList() {\r\n            this.axios\r\n                .get(this.backend_url + 'getDepartment')\r\n                .then((res) => {\r\n                    // console.log(res.data.data);\r\n                    this.departments = res.data.data;\r\n\r\n                })\r\n        },\r\n\r\n        getDesignationList() {\r\n            this.axios\r\n                .get(this.backend_url + 'getDesignationMgt')\r\n                .then((res) => {\r\n                    this.designations = res.data.data;\r\n                    // console.log(this.designations);\r\n                })\r\n        },\r\n        getTransfertype() {\r\n            this.axios\r\n                .get(this.backend_url + 'transferType')\r\n                .then((res) => {\r\n                    this.transferType = res.data.list;\r\n                    // console.log('fddsfsdf');\r\n                    // console.log(this.transferType[0].title);\r\n                })\r\n        },\r\n        getUser() {\r\n            this.axios\r\n                .get(this.backend_url + `users/${this.storageData.id}`)\r\n                .then((res) => {\r\n                    this.user = res.data.userDetail.employee_id;\r\n                    // console.log(this.user);\r\n                    this.tansfer.employee_id = this.user\r\n                    // console.log(this.storageData.id);\r\n                })\r\n        },\r\n        getOffice() {\r\n            this.axios\r\n                .get(this.backend_url + `getOfficeMgt`)\r\n                .then((response) => {\r\n                    this.office = response.data.list;\r\n                    // console.log(this.office);\r\n                })\r\n        },\r\n        saveTranfer() {\r\n            try {\r\n                // this.tansfer.employee_id = this.storageData.id;\r\n                this.edit = false;\r\n                this.axios\r\n                    .post(this.backend_url + 'addTransferRecord', this.tansfer)\r\n                    .then((res) => {\r\n                        console.log(res);\r\n                        this.getTransferList();\r\n                        $(\"#exampleModal\").modal('hide');\r\n                        $('#datatable').DataTable().destroy();\r\n                        this.$toast.success(`Add Data Successfully!`);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"An error occurred while saving the transfer record:\", error);\r\n                        this.$toast.error(`Failed to save transfer record.`);\r\n                    });\r\n            } catch (error) {\r\n                console.error(\"An error occurred:\", error);\r\n                this.$toast.error(`Failed to save transfer record.`);\r\n            }\r\n        },\r\n\r\n        EditTranfer() {\r\n            try {\r\n                this.axios\r\n                    .post(this.backend_url + `updateTransferRecord/${this.tansfer.id}`, this.tansfer)\r\n                    .then((res) => {\r\n                        console.log(res);\r\n                        this.getTransferList();\r\n                        $(\"#exampleModal\").modal('hide');\r\n                        $('#datatable').DataTable().destroy();\r\n                        this.$toast.success(`Update Data Successfully!`);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"An error occurred while updating the transfer record:\", error);\r\n                        this.$toast.error(`Failed to update transfer record.`);\r\n                    });\r\n            } catch (error) {\r\n                console.error(\"An error occurred:\", error);\r\n                this.$toast.error(`Failed to update transfer record.`);\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    created() {\r\n        this.getTransferList();\r\n        this.getDepartmentList();\r\n        this.getDesignationList();\r\n        this.getTransfertype();\r\n        this.getUser();\r\n        this.getOffice();\r\n    },\r\n    mounted() {\r\n\r\n\r\n    },\r\n\r\n\r\n    watch: {\r\n\r\n    },\r\n\r\n}\r\n\r\n\r\n</script>\r\n  \r\n<style>\r\n.card-title {\r\n    /* text-align: center; */\r\n    font-size: 20px;\r\n    font-weight: bolder;\r\n}\r\n\r\n.ui.inverted.dimmer {\r\n    color: #009688 !important;\r\n\r\n}\r\n\r\n.cropper {\r\n    height: 400px;\r\n    width: 400px;\r\n    background: #DDD;\r\n}\r\n\r\n\r\n.file-btn {\r\n    position: relative;\r\n    display: block;\r\n    cursor: pointer;\r\n}\r\n\r\n.file-btn input {\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n}\r\n</style>\r\n  \r\n<style scoped>\r\n::v-deep .modal-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n::v-deep .modal-content {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 1rem;\r\n    padding: 1rem;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 0.25rem;\r\n    background: #fff;\r\n}\r\n\r\n.modal__title {\r\n    margin: 0 2rem 0 0;\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n}\r\n\r\n.modal__close {\r\n    position: absolute;\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n}\r\n</style>\r\n    \r\n<style scoped>\r\n.dark-mode div::v-deep .modal-content {\r\n    border-color: #2d3748;\r\n    background-color: #1a202c;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}