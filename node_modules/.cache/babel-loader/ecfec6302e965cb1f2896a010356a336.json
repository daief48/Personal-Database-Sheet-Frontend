{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(config => {\n  const storageData = JSON.parse(localStorage.getItem('user'));\n\n  if (storageData) {\n    config.headers['Authorization'] = storageData.token_type + ' ' + storageData.access_token;\n  }\n\n  return config;\n}, error => {\n  Promise.reject(error);\n}); //Add a response interceptor\n\naxios.interceptors.response.use(response => {\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n}); // initial state\n\nconst state = () => ({\n  otpUserId: '',\n  otp: ''\n}); // getters\n\n\nconst getters = {\n  otpUserId: state => state.otpUserId,\n  otp: state => state.otp\n}; // actions\n\nconst actions = {\n  async setOtpUserId({\n    commit\n  }, id) {\n    commit('setOtpUserId', id);\n  },\n\n  async setOtp({\n    commit\n  }, id) {\n    commit('setOtp', id);\n  }\n\n}; // mutations\n\nconst mutations = {\n  setOtpUserId: (state, id) => {\n    state.otpUserId = id;\n  },\n  setOtp: (state, otp) => {\n    state.otp = otp;\n  }\n};\nexport default {\n  // namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","interceptors","request","use","config","storageData","JSON","parse","localStorage","getItem","headers","token_type","access_token","error","Promise","reject","response","state","otpUserId","otp","getters","actions","setOtpUserId","commit","id","setOtp","mutations"],"sources":["C:/Users/Jubair/Desktop/pds/src/store/modules/Auth.js"],"sourcesContent":["import axios from 'axios';\r\naxios.interceptors.request.use(\r\n    config => {\r\n        const storageData = JSON.parse(localStorage.getItem('user'));\r\n        if (storageData) {\r\n            config.headers['Authorization'] = storageData.token_type +' '+ storageData.access_token; \r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        Promise.reject(error)\r\n    });\r\n\r\n//Add a response interceptor\r\naxios.interceptors.response.use((response) => {\r\n    return response\r\n}, function(error) {\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\n// initial state\r\nconst state = () => ({\r\n    otpUserId :'',\r\n    otp:''\r\n});\r\n\r\n// getters\r\nconst getters = {\r\n    otpUserId: state => state.otpUserId,\r\n    otp: state => state.otp,\r\n};\r\n\r\n// actions\r\nconst actions = {\r\n    async setOtpUserId({ commit }, id){\r\n        commit('setOtpUserId', id);\r\n    },\r\n    async setOtp({ commit }, id){\r\n        commit('setOtp', id);\r\n    }\r\n}\r\n\r\n// mutations\r\nconst mutations = {\r\n    setOtpUserId: (state, id) => {\r\n        state.otpUserId = id\r\n    },\r\n    setOtp: (state, otp) => {\r\n        state.otp = otp\r\n    },\r\n\r\n}\r\n\r\nexport default {\r\n  // namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACIC,MAAM,IAAI;EACN,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;;EACA,IAAIJ,WAAJ,EAAiB;IACbD,MAAM,CAACM,OAAP,CAAe,eAAf,IAAkCL,WAAW,CAACM,UAAZ,GAAwB,GAAxB,GAA6BN,WAAW,CAACO,YAA3E;EACH;;EACD,OAAOR,MAAP;AACH,CAPL,EAQIS,KAAK,IAAI;EACLC,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,CAVL,E,CAYA;;AACAb,KAAK,CAACC,YAAN,CAAmBe,QAAnB,CAA4Bb,GAA5B,CAAiCa,QAAD,IAAc;EAC1C,OAAOA,QAAP;AACH,CAFD,EAEG,UAASH,KAAT,EAAgB;EACf,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAJD,E,CAOA;;AACA,MAAMI,KAAK,GAAG,OAAO;EACjBC,SAAS,EAAE,EADM;EAEjBC,GAAG,EAAC;AAFa,CAAP,CAAd,C,CAKA;;;AACA,MAAMC,OAAO,GAAG;EACZF,SAAS,EAAED,KAAK,IAAIA,KAAK,CAACC,SADd;EAEZC,GAAG,EAAEF,KAAK,IAAIA,KAAK,CAACE;AAFR,CAAhB,C,CAKA;;AACA,MAAME,OAAO,GAAG;EACZ,MAAMC,YAAN,CAAmB;IAAEC;EAAF,CAAnB,EAA+BC,EAA/B,EAAkC;IAC9BD,MAAM,CAAC,cAAD,EAAiBC,EAAjB,CAAN;EACH,CAHW;;EAIZ,MAAMC,MAAN,CAAa;IAAEF;EAAF,CAAb,EAAyBC,EAAzB,EAA4B;IACxBD,MAAM,CAAC,QAAD,EAAWC,EAAX,CAAN;EACH;;AANW,CAAhB,C,CASA;;AACA,MAAME,SAAS,GAAG;EACdJ,YAAY,EAAE,CAACL,KAAD,EAAQO,EAAR,KAAe;IACzBP,KAAK,CAACC,SAAN,GAAkBM,EAAlB;EACH,CAHa;EAIdC,MAAM,EAAE,CAACR,KAAD,EAAQE,GAAR,KAAgB;IACpBF,KAAK,CAACE,GAAN,GAAYA,GAAZ;EACH;AANa,CAAlB;AAUA,eAAe;EACb;EACAF,KAFa;EAGbG,OAHa;EAIbC,OAJa;EAKbK;AALa,CAAf"},"metadata":{},"sourceType":"module"}