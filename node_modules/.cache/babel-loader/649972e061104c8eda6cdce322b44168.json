{"ast":null,"code":"import \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"datatables.net-dt/js/dataTables.dataTables\";\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\nimport $ from \"jquery\";\nimport * as Yup from \"yup\";\n\n// DataTable.use(DataTablesCore);\nexport default {\n  components: {\n    // DataTable,\n  },\n  data() {\n    const storageData = JSON.parse(localStorage.getItem('user'));\n    const schema = Yup.object().shape({\n      // blood_group: Yup.string().required(\"Blood Group is required\"),\n      last_donate: Yup.date().required(\"Last Donation Date is required\").typeError(\"Invalid date format\")\n    });\n    return {\n      schema,\n      backend_url: process.env.VUE_APP_API_URL,\n      storageData,\n      user: \"\",\n      user_id: \"\",\n      departments: \"\",\n      designations: \"\",\n      transferType: \"\",\n      office: \"\",\n      pdf: [],\n      url: this.backendUrl + \"/api/users\",\n      basicInfo: {\n        name: '',\n        mobileNumber: '',\n        email: '',\n        designation: '',\n        designation_id: '',\n        image: ''\n      },\n      transferRecordById: [],\n      BloodList: [],\n      value: {\n        id: '',\n        emp: ''\n      },\n      employeeList: [],\n      //             employee_id\n      //             blood_group\n      // last_donate\n      bloodgroupList: {\n        employee_id: \"\",\n        blood_group: \"\",\n        last_donate: \"\"\n      },\n      editbloodgroupList: {\n        employee_id: \"\",\n        blood_group: \"\",\n        last_donate: \"\"\n      },\n      bloodgroupListN: {\n        employee_id: \"\",\n        blood_group: \"\",\n        last_donate: \"\"\n      },\n      lastDonate: []\n    };\n  },\n  computed: {},\n  methods: {\n    addModal() {\n      this.axios.get(this.backend_url + 'user/getprofile/' + this.user_id).then(res => {\n        console.log(res.data.data);\n        this.bloodgroupList.name = res.data.data.name;\n        this.bloodgroupList.blood_group = res.data.data.blood_group;\n        this.bloodgroupList.last_donate = res.data.data.last_donate;\n        console.log(this.bloodgroupList);\n        this.axios.get(this.backend_url + 'specificBloodGroupbyEmployee/' + this.user).then(res => {\n          this.lastDonate = res.data.data;\n        }).catch(e => {\n          console.log(e);\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    handleFileChange(event) {\n      const selectedFile = event.target.files[0];\n      this.bloodgroupList.transfer_letter = selectedFile;\n    },\n    nameWithLang({\n      emp\n    }) {\n      return `${emp}`;\n    },\n    getEmployeeList() {\n      this.axios.get(this.backend_url + 'employeeList').then(res => {\n        console.log(res.data.employeeList);\n        this.employeeList = res.data.employeeList;\n        //   this.options =  res.data.employeeList;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    edithandleFileChange(event) {\n      const selectedFile = event.target.files[0];\n      this.editbloodgroupList.transfer_letter = selectedFile;\n    },\n    editbutton(item) {\n      this.editbloodgroupList.id = item.id;\n      this.editbloodgroupList.employee_id = item.employee_id;\n      this.editbloodgroupList.blood_group = item.blood_group;\n      this.editbloodgroupList.last_donate = item.last_donate;\n      this.value.id = item.id;\n      this.value.emp = item.name;\n    },\n    deletebutton(id) {\n      this.axios.delete(this.backend_url + 'deleteBloodGroup/' + id).then(res => {\n        console.log('Delete Successfully', res);\n        this.getBloodGroupList();\n        $('#datatable').DataTable().destroy();\n        this.$toast.error(`Delete Successfully!!`);\n      });\n    },\n    viewDetails(item) {\n      this.bloodgroupList.name = item.name;\n      this.bloodgroupList.blood_group = item.blood_group;\n      this.bloodgroupList.last_donate = item.last_donate;\n      this.axios.get(this.backend_url + 'specificBloodGroupbyEmployee/' + this.user).then(res => {\n        this.lastDonate = res.data.data;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getBloodGroupList() {\n      this.axios.get(this.backend_url + 'getBloodGroup').then(res => {\n        console.log(res.data.list);\n        this.BloodList = res.data.list;\n        setTimeout(function () {\n          $(\"#datatable\").DataTable({\n            \"processing\": true\n          });\n        }, 100);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getDepartmentList() {\n      this.axios.get(this.backend_url + 'getDepartment').then(res => {\n        // console.log(res.data.data);\n        this.departments = res.data.data;\n      });\n    },\n    getDesignationList() {\n      this.axios.get(this.backend_url + 'getDesignationMgt').then(res => {\n        this.designations = res.data.data;\n        // console.log(this.designations);\n      });\n    },\n\n    getTransfertype() {\n      this.axios.get(this.backend_url + 'transferType').then(res => {\n        this.transferType = res.data.list;\n        // console.log('fddsfsdf');\n        // console.log(this.transferType[0].title);\n      });\n    },\n\n    getUser() {\n      this.axios.get(this.backend_url + `users/${this.storageData.id}`).then(res => {\n        this.user = res.data.userDetail.employee_id;\n        this.user_id = res.data.userDetail.id;\n        console.log(this.user_id);\n        this.bloodgroupList.employee_id = this.user;\n        // console.log(this.storageData.id);\n      });\n    },\n\n    getOffice() {\n      console.log(this.storageData.name);\n      this.axios.get(this.backend_url + `getOfficeMgt`).then(response => {\n        this.office = response.data.list;\n        // console.log(this.office);\n      });\n    },\n\n    saveTranfer() {\n      this.bloodgroupList.employee_id = this.value.id;\n      try {\n        // this.bloodgroupList.employee_id = this.storageData.id;\n        this.axios.post(this.backend_url + 'addBloodGroup', this.bloodgroupList).then(res => {\n          console.log(res);\n          this.getBloodGroupList();\n          $(\"#exampleModal\").modal('hide');\n          $('#datatable').DataTable().destroy();\n          this.$toast.success(`Add Data Successfully!`);\n          this.$refs.form.resetForm();\n        }).catch(error => {\n          console.error(\"An error occurred while saving the transfer record:\", error);\n          this.$toast.error(`Failed to save transfer record.`);\n        });\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n        this.$toast.error(`Failed to save transfer record.`);\n      }\n    },\n    EditBlood() {\n      // this.editbloodgroupList.employee_id = this.value.id;\n\n      try {\n        this.axios.put(this.backend_url + `updateBloodGroup/${this.editbloodgroupList.id}`, this.editbloodgroupList).then(res => {\n          console.log(res);\n          this.getBloodGroupList();\n          $(\"#exampleModal1\").modal('hide');\n          $('#datatable').DataTable().destroy();\n          this.$toast.success(`Update Data Successfully!`);\n        }).catch(error => {\n          console.error(\"An error occurred while updating the transfer record:\", error);\n          this.$toast.error(`Failed to update transfer record.`);\n        });\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n        this.$toast.error(`Failed to update transfer record.`);\n      }\n    }\n  },\n  created() {\n    this.getEmployeeList();\n    this.getBloodGroupList();\n    this.getDepartmentList();\n    this.getDesignationList();\n    this.getTransfertype();\n    this.getUser();\n    this.getOffice();\n  },\n  mounted() {},\n  watch: {}\n};","map":{"version":3,"mappings":"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","names":["$","Yup","components","data","storageData","JSON","parse","localStorage","getItem","schema","object","shape","last_donate","date","required","typeError","backend_url","process","env","VUE_APP_API_URL","user","user_id","departments","designations","transferType","office","pdf","url","backendUrl","basicInfo","name","mobileNumber","email","designation","designation_id","image","transferRecordById","BloodList","value","id","emp","employeeList","bloodgroupList","employee_id","blood_group","editbloodgroupList","bloodgroupListN","lastDonate","computed","methods","addModal","axios","get","then","res","console","log","catch","e","handleFileChange","event","selectedFile","target","files","transfer_letter","nameWithLang","getEmployeeList","edithandleFileChange","editbutton","item","deletebutton","delete","getBloodGroupList","DataTable","destroy","$toast","error","viewDetails","list","setTimeout","getDepartmentList","getDesignationList","getTransfertype","getUser","userDetail","getOffice","response","saveTranfer","post","modal","success","$refs","form","resetForm","EditBlood","put","created","mounted","watch"],"sourceRoot":"","sources":["C:\\Users\\Jubair\\Desktop\\pds\\src\\components\\Blood Group\\blood-group.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h5><i class=\"fa fa-thin fa-arrow-left\"></i> Blood Group</h5>\r\n        <div class=\"card card-default\">\r\n            <div class=\"card-body\">\r\n                <div style=\"display: flex;justify-content: space-between;\">\r\n                    <h3>All Blood Group List</h3>\r\n                    <a href=\"/\" class=\"btn btn-outline-primary mb-2\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                        @click=\"addModal()\">+Add Last Donate</a>\r\n\r\n                    <!-- hidden model  -->\r\n                    <!-- Add and Edit Modal -->\r\n\r\n                    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\"\r\n                        aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div class=\"modal-dialog\" role=\"document\">\r\n                            <div class=\"modal-content\" style=\"width: 121%; top: 164px;\">\r\n                                <div class=\"modal-header\">\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div class=\"modal-body card\">\r\n                                    <div class=\"card-body d-flex flex-column\">\r\n                                        <h5 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"font-size: 25px;\">\r\n                                            Blood Group Details\r\n                                        </h5>\r\n                                        <hr>\r\n                                        <h1 class=\"card-title \">Employee Name: {{ bloodgroupList.name }}</h1>\r\n                                        <h1 class=\"card-title\">Blood Group: {{ bloodgroupList.blood_group }}</h1>\r\n\r\n                                        <!-- Using a div for Last Donate details -->\r\n                                        <div v-for=\"donate in lastDonate\" :key=\"donate.id\" class=\"card p-4\">\r\n                                            <h5 class=\"card-title\"> Donate Date: {{ donate.last_donate }}</h5>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--End Add and Edit Modal -->\r\n                    <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\"\r\n                        aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div class=\"modal-dialog\" role=\"document\">\r\n                            <div class=\"modal-content\" style=\"width: 121%; top: 164px;\">\r\n                                <div class=\"modal-header\">\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div class=\"modal-body card\">\r\n                                    <div class=\"card-body d-flex flex-column\">\r\n                                        <h5 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"font-size: 25px;\">\r\n                                            Blood Group Details\r\n                                        </h5>\r\n                                        <hr>\r\n                                        <h1 class=\"card-title \">Employee Name: {{ bloodgroupList.name }}</h1>\r\n                                        <h1 class=\"card-title\">Blood Group: {{ bloodgroupList.blood_group }}</h1>\r\n\r\n                                        <!-- Using a div for Last Donate details -->\r\n                                        <div v-for=\"donate in lastDonate\" :key=\"donate.id\" class=\"card p-4\">\r\n                                            <h5 class=\"card-title\"> Donate Date: {{ donate.last_donate }}</h5>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Transter Details Modal -->\r\n\r\n                    <div class=\"modal fade\" id=\"exampleModal2\" tabindex=\"-1\" role=\"dialog\"\r\n                        aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div class=\"modal-dialog\" role=\"document\">\r\n                            <div class=\"modal-content\" style=\"width: 121%; top: 164px;\">\r\n                                <div class=\"modal-header\">\r\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div class=\"modal-body card\">\r\n                                    <div class=\"card-body d-flex flex-column\">\r\n                                        <h5 class=\"modal-title text-center\" id=\"exampleModalLabel\" style=\"font-size: 25px;\">\r\n                                            Blood Group Details\r\n                                        </h5>\r\n                                        <hr>\r\n                                        <h1 class=\"card-title \">Employee Name: {{ bloodgroupList.name }}</h1>\r\n                                        <h1 class=\"card-title\">Blood Group: {{ bloodgroupList.blood_group }}</h1>\r\n\r\n                                        <!-- Using a div for Last Donate details -->\r\n                                        <div v-for=\"donate in lastDonate\" :key=\"donate.id\" class=\"card p-4\">\r\n                                            <h5 class=\"card-title\"> Donate Date: {{ donate.last_donate }}</h5>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <!-- End Transter Details Modal -->\r\n\r\n\r\n                </div>\r\n\r\n                <hr>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n\r\n                        <table class=\"table text-center\" id=\"datatable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Employee</th>\r\n                                    <th>Blood Group</th>\r\n                                    <th>Last Donate</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <!-- \"id\": 2,\r\n                                \"employee_id\": 1,\r\n                                \"blood_group\": \"o+\",\r\n                                \"last_donate\": 24,\r\n                                \"status\": 0,\r\n                                \"created_at\": \"2023-11-02T09:36:06.000000Z\",\r\n                                \"updated_at\": \"2023-11-02T10:13:42.000000Z\",\r\n                                \"emp_id\": null,\r\n                                \"name\": null,\r\n                                \"mobile_number\": null -->\r\n\r\n                                <tr v-for=\"(item, index) in BloodList\" :key=\"index\">\r\n                                    <td>{{ item.employee_id }}</td>\r\n                                    <td>{{ item.name }}</td>\r\n                                    <td>{{ item.blood_group }}</td>\r\n                                    <td>{{ item.last_donate }}</td>\r\n\r\n                                    <td style=\"width: 185px;\" v-if=\"item.name === this.storageData.name\">\r\n\r\n\r\n                                        <a @click=\"viewDetails(item)\" class=\"mr-2 btn btn-outline-success\"\r\n                                            data-toggle=\"modal\" data-target=\"#exampleModal2\">\r\n                                            View Details\r\n                                        </a>\r\n                                    </td>\r\n                                    <td style=\"width: 185px;\" v-else>\r\n\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Modal Start -->\r\n\r\n\r\n\r\n    </div>\r\n</template>\r\n    \r\n<script>\r\n\r\nimport \"jquery/dist/jquery.min.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport $ from \"jquery\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\n// DataTable.use(DataTablesCore);\r\nexport default {\r\n    components: {\r\n        // DataTable,\r\n\r\n    },\r\n\r\n\r\n    data() {\r\n        const storageData = JSON.parse(localStorage.getItem('user'));\r\n\r\n        const schema = Yup.object().shape({\r\n            // blood_group: Yup.string().required(\"Blood Group is required\"),\r\n            last_donate: Yup.date().required(\"Last Donation Date is required\").typeError(\"Invalid date format\"),\r\n        });\r\n\r\n\r\n\r\n\r\n        return {\r\n            schema,\r\n            backend_url: process.env.VUE_APP_API_URL,\r\n            storageData,\r\n            user: \"\",\r\n            user_id: \"\",\r\n            departments: \"\",\r\n            designations: \"\",\r\n            transferType: \"\",\r\n            office: \"\",\r\n            pdf: [],\r\n            url: this.backendUrl + \"/api/users\",\r\n            basicInfo: {\r\n                name: '',\r\n                mobileNumber: '',\r\n                email: '',\r\n                designation: '',\r\n                designation_id: '',\r\n                image: '',\r\n            },\r\n            transferRecordById: [],\r\n            BloodList: [],\r\n            value: { id: '', emp: '' },\r\n            employeeList: [],\r\n            //             employee_id\r\n            //             blood_group\r\n            // last_donate\r\n            bloodgroupList: {\r\n                employee_id: \"\",\r\n                blood_group: \"\",\r\n                last_donate: \"\"\r\n\r\n            },\r\n            editbloodgroupList: {\r\n                employee_id: \"\",\r\n                blood_group: \"\",\r\n                last_donate: \"\"\r\n            },\r\n            bloodgroupListN: {\r\n                employee_id: \"\",\r\n                blood_group: \"\",\r\n                last_donate: \"\"\r\n\r\n            },\r\n            lastDonate: []\r\n        };\r\n    },\r\n\r\n    computed: {},\r\n\r\n    methods: {\r\n        addModal() {\r\n            this.axios\r\n                .get(this.backend_url + 'user/getprofile/' + this.user_id)\r\n                .then((res) => {\r\n                    console.log(res.data.data);\r\n                    this.bloodgroupList.name = res.data.data.name;\r\n                    this.bloodgroupList.blood_group = res.data.data.blood_group;\r\n                    this.bloodgroupList.last_donate = res.data.data.last_donate;\r\n                    console.log(this.bloodgroupList);\r\n                    this.axios\r\n                        .get(this.backend_url + 'specificBloodGroupbyEmployee/' + this.user)\r\n                        .then((res) => {\r\n                            this.lastDonate = res.data.data;\r\n                        })\r\n                        .catch((e) => {\r\n                            console.log(e)\r\n                        })\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e)\r\n                })\r\n        },\r\n        handleFileChange(event) {\r\n            const selectedFile = event.target.files[0];\r\n            this.bloodgroupList.transfer_letter = selectedFile;\r\n        },\r\n        nameWithLang({ emp }) {\r\n            return `${emp}`\r\n        },\r\n        getEmployeeList() {\r\n            this.axios\r\n                .get(this.backend_url + 'employeeList')\r\n                .then((res) => {\r\n                    console.log(res.data.employeeList);\r\n                    this.employeeList = res.data.employeeList;\r\n                    //   this.options =  res.data.employeeList;\r\n\r\n                })\r\n\r\n                .catch((e) => {\r\n                    console.log(e)\r\n                })\r\n        },\r\n        edithandleFileChange(event) {\r\n            const selectedFile = event.target.files[0];\r\n            this.editbloodgroupList.transfer_letter = selectedFile;\r\n        },\r\n\r\n        editbutton(item) {\r\n            this.editbloodgroupList.id = item.id;\r\n            this.editbloodgroupList.employee_id = item.employee_id;\r\n            this.editbloodgroupList.blood_group = item.blood_group;\r\n            this.editbloodgroupList.last_donate = item.last_donate;\r\n\r\n            this.value.id = item.id;\r\n            this.value.emp = item.name;\r\n\r\n        },\r\n        deletebutton(id) {\r\n            this.axios\r\n                .delete(this.backend_url + 'deleteBloodGroup/' + id)\r\n                .then((res) => {\r\n                    console.log('Delete Successfully', res);\r\n                    this.getBloodGroupList();\r\n                    $('#datatable').DataTable().destroy();\r\n                    this.$toast.error(`Delete Successfully!!`);\r\n\r\n                })\r\n        },\r\n        viewDetails(item) {\r\n            this.bloodgroupList.name = item.name;\r\n            this.bloodgroupList.blood_group = item.blood_group;\r\n            this.bloodgroupList.last_donate = item.last_donate;\r\n\r\n            this.axios\r\n                .get(this.backend_url + 'specificBloodGroupbyEmployee/' + this.user)\r\n                .then((res) => {\r\n                    this.lastDonate = res.data.data;\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e)\r\n                })\r\n        },\r\n        getBloodGroupList() {\r\n            this.axios\r\n                .get(this.backend_url + 'getBloodGroup')\r\n                .then((res) => {\r\n                    console.log(res.data.list);\r\n                    this.BloodList = res.data.list;\r\n                    setTimeout(function () {\r\n                        $(\"#datatable\").DataTable({\r\n                            \"processing\": true,\r\n                        });\r\n                    }, 100);\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e)\r\n                })\r\n\r\n        },\r\n\r\n        getDepartmentList() {\r\n            this.axios\r\n                .get(this.backend_url + 'getDepartment')\r\n                .then((res) => {\r\n                    // console.log(res.data.data);\r\n                    this.departments = res.data.data;\r\n\r\n                })\r\n        },\r\n\r\n        getDesignationList() {\r\n            this.axios\r\n                .get(this.backend_url + 'getDesignationMgt')\r\n                .then((res) => {\r\n                    this.designations = res.data.data;\r\n                    // console.log(this.designations);\r\n                })\r\n        },\r\n        getTransfertype() {\r\n            this.axios\r\n                .get(this.backend_url + 'transferType')\r\n                .then((res) => {\r\n                    this.transferType = res.data.list;\r\n                    // console.log('fddsfsdf');\r\n                    // console.log(this.transferType[0].title);\r\n                })\r\n        },\r\n        getUser() {\r\n            this.axios\r\n                .get(this.backend_url + `users/${this.storageData.id}`)\r\n                .then((res) => {\r\n                    this.user = res.data.userDetail.employee_id;\r\n                    this.user_id = res.data.userDetail.id;\r\n                    console.log(this.user_id);\r\n                    this.bloodgroupList.employee_id = this.user\r\n                    // console.log(this.storageData.id);\r\n                })\r\n        },\r\n        getOffice() {\r\n            console.log(this.storageData.name)\r\n            this.axios\r\n                .get(this.backend_url + `getOfficeMgt`)\r\n                .then((response) => {\r\n                    this.office = response.data.list;\r\n                    // console.log(this.office);\r\n                })\r\n        },\r\n        saveTranfer() {\r\n            this.bloodgroupList.employee_id = this.value.id;\r\n\r\n\r\n            try {\r\n                // this.bloodgroupList.employee_id = this.storageData.id;\r\n                this.axios\r\n                    .post(this.backend_url + 'addBloodGroup', this.bloodgroupList)\r\n                    .then((res) => {\r\n                        console.log(res);\r\n                        this.getBloodGroupList();\r\n                        $(\"#exampleModal\").modal('hide');\r\n                        $('#datatable').DataTable().destroy();\r\n                        this.$toast.success(`Add Data Successfully!`);\r\n                        this.$refs.form.resetForm();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"An error occurred while saving the transfer record:\", error);\r\n                        this.$toast.error(`Failed to save transfer record.`);\r\n                    });\r\n            } catch (error) {\r\n                console.error(\"An error occurred:\", error);\r\n                this.$toast.error(`Failed to save transfer record.`);\r\n            }\r\n        },\r\n        EditBlood() {\r\n            // this.editbloodgroupList.employee_id = this.value.id;\r\n\r\n\r\n            try {\r\n                this.axios\r\n                    .put(this.backend_url + `updateBloodGroup/${this.editbloodgroupList.id}`, this.editbloodgroupList)\r\n                    .then((res) => {\r\n                        console.log(res);\r\n                        this.getBloodGroupList();\r\n                        $(\"#exampleModal1\").modal('hide');\r\n                        $('#datatable').DataTable().destroy();\r\n                        this.$toast.success(`Update Data Successfully!`);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"An error occurred while updating the transfer record:\", error);\r\n                        this.$toast.error(`Failed to update transfer record.`);\r\n                    });\r\n            } catch (error) {\r\n                console.error(\"An error occurred:\", error);\r\n                this.$toast.error(`Failed to update transfer record.`);\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    created() {\r\n        this.getEmployeeList();\r\n        this.getBloodGroupList();\r\n        this.getDepartmentList();\r\n        this.getDesignationList();\r\n        this.getTransfertype();\r\n        this.getUser();\r\n        this.getOffice();\r\n    },\r\n    mounted() {\r\n\r\n\r\n    },\r\n\r\n\r\n    watch: {\r\n\r\n    },\r\n\r\n}\r\n\r\n\r\n</script>\r\n    \r\n<style>\r\n.card-title {\r\n    /* text-align: center; */\r\n    font-size: 20px;\r\n    font-weight: bolder;\r\n}\r\n\r\n.ui.inverted.dimmer {\r\n    color: #009688 !important;\r\n\r\n}\r\n\r\n.cropper {\r\n    height: 400px;\r\n    width: 400px;\r\n    background: #DDD;\r\n}\r\n\r\n\r\n.file-btn {\r\n    position: relative;\r\n    display: block;\r\n    cursor: pointer;\r\n}\r\n\r\n.file-btn input {\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n}\r\n</style>\r\n    \r\n<style scoped>\r\n::v-deep .modal-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n::v-deep .modal-content {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 1rem;\r\n    padding: 1rem;\r\n    border: 1px solid #e2e8f0;\r\n    border-radius: 0.25rem;\r\n    background: #fff;\r\n}\r\n\r\n.modal__title {\r\n    margin: 0 2rem 0 0;\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n}\r\n\r\n.modal__close {\r\n    position: absolute;\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n}\r\n</style>\r\n      \r\n<style scoped>\r\n.dark-mode div::v-deep .modal-content {\r\n    border-color: #2d3748;\r\n    background-color: #1a202c;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}