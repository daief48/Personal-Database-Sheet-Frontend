{"ast":null,"code":"import { createToast } from 'mosha-vue-toastify';\nimport 'mosha-vue-toastify/dist/style.css';\nimport Loader from '../Loader.vue';\nimport { defineComponent } from 'vue';\nimport { VueDraggableNext } from 'vue-draggable-next'; // import $ from 'jquery';\n\nexport default defineComponent({\n  name: 'Important Links',\n  components: {\n    Loader,\n    draggable: VueDraggableNext\n  },\n\n  data() {\n    return {\n      spinnerOn: false,\n      base_url: this.backendUrl,\n      importantLinks: [],\n      dragging: false,\n      eventTitle: ''\n    };\n  },\n\n  methods: {\n    //Get All Important Link\n    getImportantLinks() {\n      this.axios.get(this.base_url + \"/api/getImpLinks\").then(res => {\n        this.eventTitle = res.data.activeEvent.title;\n        this.importantLinks = res.data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    //Add New Link Row\n    addLink() {\n      this.importantLinks.push({\n        'title': '',\n        'link': ''\n      });\n    },\n\n    //Remove Link Row\n    removeLink(index) {\n      // if(this.importantLinks.length > 1){\n      //     this.importantLinks.splice(index, 1);\n      // } \n      this.importantLinks.splice(index, 1);\n    },\n\n    //Save Link\n    saveLinks() {\n      this.spinnerOn = true;\n      this.axios.post(this.base_url + '/api/saveImpLinks', {\n        links: JSON.stringify(this.importantLinks)\n      }).then(res => {\n        console.log(res);\n        this.spinnerOn = false;\n        createToast('Link Added Successfully', {\n          position: 'top-center',\n          transition: 'bounce',\n          timeout: 1500,\n          type: 'success'\n        });\n      }).catch(err => {\n        console.log(err);\n        this.spinnerOn = false;\n      });\n    },\n\n    print() {\n      this.$htmlToPaper('printMe');\n    }\n\n  },\n\n  created() {\n    this.getImportantLinks();\n  }\n\n});","map":{"version":3,"mappings":"AAuFA,SAASA,WAAT,QAA4B,oBAA5B;AACA,OAAO,mCAAP;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,eAAT,QAAgC,KAAhC;AACA,SAASC,gBAAT,QAAiC,oBAAjC,C,CACA;;AAEA,eAAeD,eAAe,CAAC;EAC3BE,IAAI,EAAE,iBADqB;EAE3BC,UAAU,EAAE;IACRJ,MADQ;IAERK,SAAS,EAAEH;EAFH,CAFe;;EAM3BI,IAAI,GAAG;IACH,OAAO;MACHC,SAAS,EAAC,KADP;MAEHC,QAAQ,EAAE,KAAKC,UAFZ;MAGHC,cAAc,EAAC,EAHZ;MAIHC,QAAQ,EAAE,KAJP;MAKHC,UAAU,EAAC;IALR,CAAP;EAOH,CAd0B;;EAe3BC,OAAO,EAAE;IAEL;IACAC,iBAAiB,GAAE;MACf,KAAKC,KAAL,CACCC,GADD,CACK,KAAKR,QAAL,GAAgB,kBADrB,EAECS,IAFD,CAEOC,GAAD,IAAS;QACX,KAAKN,UAAL,GAAkBM,GAAG,CAACZ,IAAJ,CAASa,WAAT,CAAqBC,KAAvC;QACA,KAAKV,cAAL,GAAsBQ,GAAG,CAACZ,IAAJ,CAASA,IAA/B;MACH,CALD,EAMCe,KAND,CAMQC,GAAD,IAAS;QACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACH,CARD;IASH,CAbI;;IAeL;IACAG,OAAO,GAAG;MACN,KAAKf,cAAL,CAAoBgB,IAApB,CAAyB;QAAC,SAAQ,EAAT;QAAY,QAAO;MAAnB,CAAzB;IACH,CAlBI;;IAoBL;IACAC,UAAU,CAACC,KAAD,EAAO;MACb;MACA;MACA;MACA,KAAKlB,cAAL,CAAoBmB,MAApB,CAA2BD,KAA3B,EAAkC,CAAlC;IACH,CA1BI;;IA4BL;IACAE,SAAS,GAAE;MACP,KAAKvB,SAAL,GAAiB,IAAjB;MACA,KAAKQ,KAAL,CACCgB,IADD,CACM,KAAKvB,QAAL,GAAgB,mBADtB,EAC0C;QAACwB,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKxB,cAApB;MAAR,CAD1C,EAECO,IAFD,CAEOC,GAAD,IAAS;QACXK,OAAO,CAACC,GAAR,CAAYN,GAAZ;QACA,KAAKX,SAAL,GAAiB,KAAjB;QACAR,WAAW,CAAC,yBAAD,EAA4B;UAC/BoC,QAAQ,EAAE,YADqB;UAE/BC,UAAU,EAAE,QAFmB;UAG/BC,OAAO,EAAE,IAHsB;UAI/BC,IAAI,EAAE;QAJyB,CAA5B,CAAX;MAMH,CAXD,EAYCjB,KAZD,CAYQC,GAAD,IAAS;QACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACA,KAAKf,SAAL,GAAiB,KAAjB;MACH,CAfD;IAgBH,CA/CI;;IAgDLgC,KAAK,GAAG;MACJ,KAAKC,YAAL,CAAkB,SAAlB;IACJ;;EAlDK,CAfkB;;EAoE3BC,OAAO,GAAG;IACN,KAAK3B,iBAAL;EAEH;;AAvE0B,CAAD,CAA9B","names":["createToast","Loader","defineComponent","VueDraggableNext","name","components","draggable","data","spinnerOn","base_url","backendUrl","importantLinks","dragging","eventTitle","methods","getImportantLinks","axios","get","then","res","activeEvent","title","catch","err","console","log","addLink","push","removeLink","index","splice","saveLinks","post","links","JSON","stringify","position","transition","timeout","type","print","$htmlToPaper","created"],"sourceRoot":"","sources":["/var/www/html/PMS_PROJECT/pds/src/components/ImportantLinks/ImportantLinks.vue"],"sourcesContent":["<template>\n    <div>\n        <h4 class=\"text-bold heading-style\">Important Links</h4>\n        <div class=\"card card-default\">\n            <!-- Heading -->\n            <div class=\"card-header\">\n                <div class=\"\"><button class=\"btn btn-sm add-button float-left\" @click=\"addLink\">Add New Link</button></div>\n\n                <button  style=\"padding:5px 6px\"  @click=\"print\" class=\"float-right bg-success print-button\">Print</button>\n            </div>\n\n            <div class=\"card-body\">\n\n            <div class=\"row\">\n                <div class=\"col-md-12\" id=\"\">\n                        <!-- Event Title -->\n                            <div class=\"row mb-2\">\n                                <div class=\"col-md-12\">\n                                    <div class=\"input-group border border-dark rounded\">\n                                        <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text p4 input-group-text-label\" >Event Title </span>\n                                        </div>\n                                        <label class=\"ml-3 mt-2 \">{{eventTitle}}</label>\n                                    </div>                            \n                                </div>\n                            </div>\n                         <!-- End -->\n\n                    <!-- Draggable Comp -->\n                    <draggable class=\"dragArea list-group w-full\" :list=\"importantLinks\" @change=\"log\">\n                    <div v-for=\"(link,index) in importantLinks\" :key=\"index\" class=\"bg-light w-100 d-block overflow-hidden mb-3 p-1 link-item\" style=\"box-shadow: 0px 0px 5px 0px #ccc; border-radius:3px;\">\n                        <div class=\"float-left text-center\" style=\"width:30px; line-height: 35px; border:1px solid #ccc; border-right: none;\">{{index+1}}</div>\n                        <div class=\"inputFields float-left\" style=\"width:calc( 100% - 70px )\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6 form-group m-0\">\n                                    <div class=\"input-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text p5\" >Title</span>\n                                    </div>\n                                    <input type=\"text\" v-model=\"link.title\" class=\"form-control\" autocomplete=\"off\"/>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6 form-group m-0\">\n                                    <div class=\"input-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text p5\" >Url</span>\n                                    </div>\n                                    <input type=\"text\" v-model=\"link.link\" class=\"form-control\" autocomplete=\"off\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <button class=\"btn btn-sm btn-danger float-right ml-1\" style=\"width:30px; line-height: 28px;\" @click=\"removeLink(index)\">X</button>\n                    </div> \n                    </draggable>\n                    <!-- End -->\n\n                    <div class=\"jumbotron p-2\"><button :disabled=\"importantLinks.length < 1\" class=\"btn btn-md btn-success btn-block\" @click=\"saveLinks\">Save Links</button></div> \n                </div>\n            </div> \n            <loader v-if=\"spinnerOn\"></loader>\n            </div>\n        </div>\n\n        <div class=\"d-none\" id=\"printMe\">\n\n            <table class=\"table table-bordered\" style=\"width:100%\">\n                <thead style=\"text-align:left\">\n                    <th>#</th>\n                    <th>title</th>\n                    <th>Url</th>\n                </thead>\n                \n                <tbody>\n                    <tr v-for=\"(link,index) in importantLinks\" :key=\"index\" style=\"border:1px solid #cccccc\">\n                        <td>{{++index}}</td>\n                        <td>{{link.title}}</td>\n                        <td>{{link.link}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n  \n</template>\n\n<script>\nimport { createToast } from 'mosha-vue-toastify';\nimport 'mosha-vue-toastify/dist/style.css'\nimport Loader from '../Loader.vue';\nimport { defineComponent } from 'vue';\nimport { VueDraggableNext } from 'vue-draggable-next';\n// import $ from 'jquery';\n\nexport default defineComponent({\n    name: 'Important Links',\n    components: {\n        Loader,\n        draggable: VueDraggableNext,\n    },\n    data() {\n        return {\n            spinnerOn:false,\n            base_url: this.backendUrl,\n            importantLinks:[],\n            dragging: false,\n            eventTitle:''\n        }\n    },\n    methods: {\n\n        //Get All Important Link\n        getImportantLinks(){\n            this.axios\n            .get(this.base_url + \"/api/getImpLinks\")\n            .then((res) => {\n                this.eventTitle = res.data.activeEvent.title;\n                this.importantLinks = res.data.data;\n            })\n            .catch((err) => { \n                console.log(err);\n            })\n        },\n\n        //Add New Link Row\n        addLink() { \n            this.importantLinks.push({'title':'','link':''});\n        },\n\n        //Remove Link Row\n        removeLink(index){\n            // if(this.importantLinks.length > 1){\n            //     this.importantLinks.splice(index, 1);\n            // } \n            this.importantLinks.splice(index, 1);\n        },\n\n        //Save Link\n        saveLinks(){\n            this.spinnerOn = true;\n            this.axios\n            .post(this.base_url + '/api/saveImpLinks',{links: JSON.stringify(this.importantLinks)})\n            .then((res) => { \n                console.log(res);\n                this.spinnerOn = false;\n                createToast('Link Added Successfully', {\n                        position: 'top-center',\n                        transition: 'bounce',\n                        timeout: 1500,\n                        type: 'success',\n                })\n            })\n            .catch((err) => { \n                console.log(err);\n                this.spinnerOn = false;\n            })\n        },\n        print() {\n            this.$htmlToPaper('printMe')\n        }\n    },\n\n    created() {\n        this.getImportantLinks();\n        \n    },\n})\n</script>\n\n<style scoped>\n.legendItem {\n    margin-top: -36px;\n    background-color: white;\n    padding: 0 7px;\n    display: inline-block;\n    width: auto;\n    line-height: 10px;\n}\n\n.field_set_item {\n    border-width: 2px;\n    border-style: groove;\n    border-color: threedface;\n    padding: 30px;\n}\n.link-item{\n    cursor: move;\n}\n</style>"]},"metadata":{},"sourceType":"module"}