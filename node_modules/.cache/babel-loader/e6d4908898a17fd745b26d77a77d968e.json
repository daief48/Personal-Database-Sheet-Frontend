{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(config => {\n  const storageData = JSON.parse(localStorage.getItem('user'));\n  if (storageData) {\n    config.headers['Authorization'] = storageData.token_type + ' ' + storageData.access_token;\n  }\n  return config;\n}, error => {\n  Promise.reject(error);\n});\n\n//Add a response interceptor\naxios.interceptors.response.use(response => {\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n});\n\n// initial state\nconst state = () => ({\n  otpUserId: '',\n  otp: ''\n});\n\n// getters\nconst getters = {\n  otpUserId: state => state.otpUserId,\n  otp: state => state.otp\n};\n\n// actions\nconst actions = {\n  async setOtpUserId({\n    commit\n  }, id) {\n    commit('setOtpUserId', id);\n  },\n  async setOtp({\n    commit\n  }, id) {\n    commit('setOtp', id);\n  }\n};\n\n// mutations\nconst mutations = {\n  setOtpUserId: (state, id) => {\n    state.otpUserId = id;\n  },\n  setOtp: (state, otp) => {\n    state.otp = otp;\n  }\n};\nexport default {\n  // namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","interceptors","request","use","config","storageData","JSON","parse","localStorage","getItem","headers","token_type","access_token","error","Promise","reject","response","state","otpUserId","otp","getters","actions","setOtpUserId","commit","id","setOtp","mutations"],"sources":["C:/Users/Jubair/Downloads/pds/pds/src/store/modules/Auth.js"],"sourcesContent":["import axios from 'axios';\r\naxios.interceptors.request.use(\r\n    config => {\r\n        const storageData = JSON.parse(localStorage.getItem('user'));\r\n        if (storageData) {\r\n            config.headers['Authorization'] = storageData.token_type +' '+ storageData.access_token; \r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        Promise.reject(error)\r\n    });\r\n\r\n//Add a response interceptor\r\naxios.interceptors.response.use((response) => {\r\n    return response\r\n}, function(error) {\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\n// initial state\r\nconst state = () => ({\r\n    otpUserId :'',\r\n    otp:''\r\n});\r\n\r\n// getters\r\nconst getters = {\r\n    otpUserId: state => state.otpUserId,\r\n    otp: state => state.otp,\r\n};\r\n\r\n// actions\r\nconst actions = {\r\n    async setOtpUserId({ commit }, id){\r\n        commit('setOtpUserId', id);\r\n    },\r\n    async setOtp({ commit }, id){\r\n        commit('setOtp', id);\r\n    }\r\n}\r\n\r\n// mutations\r\nconst mutations = {\r\n    setOtpUserId: (state, id) => {\r\n        state.otpUserId = id\r\n    },\r\n    setOtp: (state, otp) => {\r\n        state.otp = otp\r\n    },\r\n\r\n}\r\n\r\nexport default {\r\n  // namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzBA,KAAK,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACN,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC5D,IAAIJ,WAAW,EAAE;IACbD,MAAM,CAACM,OAAO,CAAC,eAAe,CAAC,GAAGL,WAAW,CAACM,UAAU,GAAE,GAAG,GAAEN,WAAW,CAACO,YAAY;EAC3F;EACA,OAAOR,MAAM;AACjB,CAAC,EACDS,KAAK,IAAI;EACLC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AACzB,CAAC,CAAC;;AAEN;AACAb,KAAK,CAACC,YAAY,CAACe,QAAQ,CAACb,GAAG,CAAEa,QAAQ,IAAK;EAC1C,OAAOA,QAAQ;AACnB,CAAC,EAAE,UAASH,KAAK,EAAE;EACf,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;;AAGF;AACA,MAAMI,KAAK,GAAGA,CAAA,MAAO;EACjBC,SAAS,EAAE,EAAE;EACbC,GAAG,EAAC;AACR,CAAC,CAAC;;AAEF;AACA,MAAMC,OAAO,GAAG;EACZF,SAAS,EAAED,KAAK,IAAIA,KAAK,CAACC,SAAS;EACnCC,GAAG,EAAEF,KAAK,IAAIA,KAAK,CAACE;AACxB,CAAC;;AAED;AACA,MAAME,OAAO,GAAG;EACZ,MAAMC,YAAYA,CAAC;IAAEC;EAAO,CAAC,EAAEC,EAAE,EAAC;IAC9BD,MAAM,CAAC,cAAc,EAAEC,EAAE,CAAC;EAC9B,CAAC;EACD,MAAMC,MAAMA,CAAC;IAAEF;EAAO,CAAC,EAAEC,EAAE,EAAC;IACxBD,MAAM,CAAC,QAAQ,EAAEC,EAAE,CAAC;EACxB;AACJ,CAAC;;AAED;AACA,MAAME,SAAS,GAAG;EACdJ,YAAY,EAAEA,CAACL,KAAK,EAAEO,EAAE,KAAK;IACzBP,KAAK,CAACC,SAAS,GAAGM,EAAE;EACxB,CAAC;EACDC,MAAM,EAAEA,CAACR,KAAK,EAAEE,GAAG,KAAK;IACpBF,KAAK,CAACE,GAAG,GAAGA,GAAG;EACnB;AAEJ,CAAC;AAED,eAAe;EACb;EACAF,KAAK;EACLG,OAAO;EACPC,OAAO;EACPK;AACF,CAAC"},"metadata":{},"sourceType":"module"}